// Code generated by go-bindata.
// sources:
// db/20180414204345_billings.sql
// db/20180414204720_gateways.sql
// db/20180414204927_online_payments.sql
// db/20180414205035_bank_snaps.sql
// db/20180414210204_manual_cash_changes.sql
// db/20180414210631_foregn_keys.sql
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _db20180414204345_billingsSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6f\x9c\x30\x10\x86\xef\xfc\x8a\xb9\xb1\xab\x26\x52\x7b\x8e\x7a\x20\xc1\x8d\xac\xee\x7a\x53\xd6\x48\xcd\xc9\x0c\x66\xb4\x58\x31\x63\x84\xa1\x69\xfe\x7d\xe5\x7e\x45\x1c\xb2\xd9\xe3\xf8\x7d\x5e\x8f\x25\x3f\xd9\xf5\x35\x7c\x18\xdc\x69\xc2\x99\xa0\x1e\xd3\x78\xfc\xb6\x03\xc7\x10\xc9\xce\x2e\x30\xe4\xf5\x98\x83\x8b\x40\x3f\xc9\x2e\x33\x75\xf0\xdc\x13\xc3\xdc\xbb\x08\x7f\x7a\x09\x72\x11\x70\x1c\xbd\xa3\x2e\x2b\xab\xc3\x03\xe8\xe2\x76\x27\x40\x7e\x01\xf1\x5d\x1e\xf5\x11\x9a\xd6\x79\xef\xf8\x14\x9b\x9b\xec\xae\x12\x85\x16\x7f\x91\xd7\x00\x36\x19\x40\xe3\xba\x06\xa4\xd2\x9b\x4f\x1f\xb7\x50\xab\xa3\xbc\x57\xa2\x04\x75\xd0\xa0\xea\xdd\x0e\x8a\x5a\x1f\x8c\x54\x77\x95\xd8\x0b\xa5\xaf\x52\xa1\x0b\x03\x3a\x36\x67\x7b\xbf\xc1\x25\xd2\x74\x01\x36\xe2\x8b\x19\x42\x47\xbe\x01\xa1\xea\xfd\x26\x0f\xec\x1d\x93\x19\xf1\x65\x20\x9e\xf3\x2b\xc8\x5b\xe4\x27\x13\x19\xc7\x34\x0c\xc8\x0b\x7a\x63\x31\xf6\xc6\xf6\xc8\x27\xca\xb7\xeb\x1b\x1d\xdb\x30\xd0\x05\xab\x7f\xe0\xfc\x8a\xac\x12\x1c\xc2\xc2\x6f\x85\xe9\xc5\x67\x81\x16\x3d\xb2\xa5\x37\x52\x3b\x11\xce\xd4\x99\xb4\xbc\x2c\xb4\xd0\x72\x2f\x56\xc4\x43\x25\xf7\x45\xf5\x08\x5f\xc5\x23\x6c\xd2\x07\x6d\xb7\x99\x50\xf7\x52\x09\xf8\x0c\x92\x39\x94\xb7\x37\xd9\xca\xa3\x32\x3c\xf3\x3f\x93\xfe\x6b\x94\x0e\x2f\x12\x69\x0a\xde\x53\x07\x2d\xda\xa7\xf7\x65\xca\x7e\x05\x00\x00\xff\xff\x0b\xfe\x01\x2a\xc1\x02\x00\x00"

func db20180414204345_billingsSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414204345_billingsSql,
		"db/20180414204345_billings.sql",
	)
}

func db20180414204345_billingsSql() (*asset, error) {
	bytes, err := db20180414204345_billingsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414204345_billings.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180414204720_gatewaysSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x0f\xd2\x30\x1c\x86\xef\xfb\x14\xef\x6d\x23\x42\xa2\x26\x9c\x88\x87\xc1\x2a\x36\x6e\x05\xb7\xce\xc8\x89\x95\xf5\x27\x34\x8e\x6e\xa1\x5d\x90\x6f\x6f\x26\x7f\x0c\xc4\x44\x6f\x6d\xdf\xe7\x39\x34\x4f\x30\x99\xe0\xcd\xd1\xec\x4f\xca\x13\xca\x6e\xb8\x16\x5f\x52\x18\x0b\x47\xb5\x37\xad\x45\x58\x76\x21\x8c\x03\xfd\xa4\xba\xf7\xa4\x71\x3e\x90\x85\x3f\x18\x87\xab\x37\x40\xc6\x41\x75\x5d\x63\x48\x07\x49\xbe\x5a\x43\xc6\xf3\x94\x81\x7f\x04\xfb\xc6\x0b\x59\xa0\xda\x2b\x4f\x67\x75\x71\xd5\x2c\x58\xe4\x2c\x96\xec\x86\xfc\x19\x10\x05\x40\x65\x74\x05\x2e\x64\xf4\xee\xed\x08\xa5\x28\xf8\x52\xb0\x04\x62\x25\x21\xca\x34\x45\x5c\xca\xd5\x96\x8b\x45\xce\x32\x26\xe4\x78\x10\xac\x3a\x52\x85\xaf\x71\xbe\xf8\x14\xe7\xd1\xfb\xe9\x74\xf4\xc0\x7f\xef\xce\x2b\xdf\xbb\x0a\x4c\x94\x59\x14\x6a\xe3\xd4\xae\x21\x1d\x8e\x11\x92\xbd\x1e\x5f\x04\x4d\xdf\x55\xdf\xf8\xbb\x71\x21\x37\xc0\xb6\x7d\xe5\xea\x13\x29\x4f\x7a\xab\x7c\x85\x24\x96\x4c\xf2\x8c\x3d\x13\x7d\xa7\xff\x42\xdc\xd6\x75\xce\xb3\x38\xdf\xe0\x33\xdb\x20\x1a\xbe\x3d\x0a\x98\x58\x72\xc1\xf0\x01\xdc\xda\x36\x99\xcf\x82\xa7\x38\x49\x7b\xb6\xf7\x3c\x8f\x36\xc3\xe3\x7f\xd5\x39\xb5\x4d\x43\x1a\x3b\x55\xff\xf8\x77\xa1\xe0\x57\x00\x00\x00\xff\xff\xe8\xe2\x1c\x4b\x16\x02\x00\x00"

func db20180414204720_gatewaysSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414204720_gatewaysSql,
		"db/20180414204720_gateways.sql",
	)
}

func db20180414204720_gatewaysSql() (*asset, error) {
	bytes, err := db20180414204720_gatewaysSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414204720_gateways.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180414204927_online_paymentsSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x51\x6f\xd3\x30\x14\x85\xdf\xf3\x2b\xee\x5b\x12\xb1\x49\x20\xc1\x13\xe2\x21\x6b\xcc\xb0\x68\xdd\x2d\x71\xd0\xf6\xe4\xb8\xf1\xdd\x76\xd5\xc4\x89\x62\x47\xa5\xfc\x7a\x64\xd6\x0e\x36\xca\xc8\xa3\xcf\xf9\x8e\xad\x9b\x9b\x13\x9d\x9f\xc3\x9b\x8e\xee\x47\xed\x11\xaa\x21\x1c\xcb\xeb\x25\x90\x05\x87\x8d\xa7\xde\x42\x5c\x0d\x31\x90\x03\xfc\x8e\xcd\xe4\xd1\xc0\xee\x01\x2d\xf8\x07\x72\xf0\x98\x0b\x10\x39\xd0\xc3\xd0\x12\x9a\x28\x2f\xd6\x57\x20\xb3\x8b\x25\x03\xfe\x19\xd8\x0d\x2f\x65\x09\x75\x6f\x5b\xb2\xa8\x06\xbd\xef\xd0\x7a\x57\x7f\x8c\x16\x05\xcb\x24\x3b\x90\x7f\xf9\x90\x44\x00\x35\x99\x1a\xb8\x90\xc9\xbb\xb7\x29\x54\xa2\xe4\x97\x82\xe5\x20\xd6\x12\x44\xb5\x5c\x42\x56\xc9\xb5\xe2\x62\x51\xb0\x15\x13\xf2\x2c\x04\x4c\xdf\x69\xb2\xea\xd5\xdc\x2f\x70\x72\x38\xce\xc0\xee\xb5\xc7\x9d\xde\xcf\x20\x75\xd7\x4f\xd6\xff\x8f\x72\x5e\xfb\xc9\xd5\xc0\x44\xb5\x4a\x62\xb2\xe4\xe3\x33\x88\xc9\xaa\xc3\x43\xe1\xb4\xd1\xcd\x56\xf9\x5e\x35\x2d\x35\xdb\xbd\xde\x04\xed\x8e\xac\x6e\xe9\x07\x9a\x38\x7d\x7e\xe1\x46\xdb\xad\x3a\xde\xfa\xfa\xdb\x23\xde\x29\x3b\x75\x35\x7c\xcb\x8a\xc5\x97\xac\x48\xde\x7f\x48\x5f\x12\xee\x04\x71\x74\x9b\xf0\x11\x4e\x3a\x7e\xd4\x0d\x86\xe4\x06\xc7\x7f\x85\x47\xd4\x1e\x8d\xd2\xbe\x86\x3c\x93\x4c\xf2\x15\x7b\xb1\x91\xc1\x9c\x20\x0e\xee\x55\xc1\x57\x59\x71\x0b\x5f\xd9\x2d\x24\xe1\xb7\x48\x83\x5a\x09\x7e\x5d\x31\xe0\x22\x67\x37\x4f\xf3\xa9\x47\xb5\x86\xe4\xf7\xc4\x59\xb9\x38\x11\x20\xf3\x07\x1b\x86\x0b\x58\x1a\x31\x71\xc9\x05\x83\x4f\xc0\xad\xed\xf3\x8b\xe8\x59\x45\xf2\x7e\x67\x8f\x25\x79\x6a\x48\x10\x67\x75\x64\xec\xdb\x16\x0d\x84\x0d\xcf\xee\x49\xf4\x33\x00\x00\xff\xff\x5c\xab\xc2\x43\xa3\x03\x00\x00"

func db20180414204927_online_paymentsSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414204927_online_paymentsSql,
		"db/20180414204927_online_payments.sql",
	)
}

func db20180414204927_online_paymentsSql() (*asset, error) {
	bytes, err := db20180414204927_online_paymentsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414204927_online_payments.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180414205035_bank_snapsSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x8e\xda\x30\x14\x45\xf7\xf9\x8a\xb7\x4b\x50\x41\x6a\xd7\xa8\x8b\x40\x5c\x64\x35\x31\x34\x71\xa4\xb2\x72\x9c\xf8\xb5\xb8\x10\x27\xb2\x9d\x32\xf3\xf7\xa3\x30\x0c\x1a\x46\x68\x60\x67\xfb\x9e\x6b\x4b\x7e\x27\x98\xcd\xe0\x4b\xab\xff\x5a\xe9\x11\xca\x7e\xdc\x16\xbf\x52\xd0\x06\x1c\x36\x5e\x77\x06\xc2\xb2\x0f\x41\x3b\xc0\x27\x6c\x06\x8f\x0a\x8e\x3b\x34\xe0\x77\xda\xc1\x6b\x6f\x84\xb4\x03\xd9\xf7\x07\x8d\x2a\x48\xf2\xf5\x06\x78\xbc\x48\x09\xd0\x1f\x40\x7e\xd3\x82\x17\x50\xd5\xd2\xec\x85\x33\xb2\x77\xd5\x3c\x08\x96\x39\x89\x39\x39\x53\xef\x33\x88\x02\x80\x4a\xab\x0a\x28\xe3\xd1\xb7\xaf\x13\x28\x59\x41\x57\x8c\x24\xc0\xd6\x1c\x58\x99\xa6\x10\x97\x7c\x2d\x28\x5b\xe6\x24\x23\x8c\x4f\xc7\x82\xea\x5a\xa9\x8d\xf8\xb4\x77\x02\x07\x87\xf6\x01\xcc\x5b\xd9\xa0\x30\x43\x5b\xa3\xbd\xc7\xca\xb6\x1b\x8c\xbf\x47\x39\x2f\xfd\xe0\x2a\x20\xac\xcc\xa2\xf0\x28\xb5\x17\xbe\x13\xcd\x0e\x9b\x7d\x38\x85\xf0\x3f\x5a\xfd\x47\xa3\x1a\xd7\x16\xff\x61\xe3\x51\x85\x93\xeb\x2b\x4e\x30\x2a\x51\x3f\xdf\x7a\xec\x42\x59\x94\x1e\x95\x90\xbe\x82\x24\xe6\x84\xd3\x8c\x7c\xf8\x83\x5e\xdd\x20\xce\xe9\x26\xa7\x59\x9c\x6f\xe1\x27\xd9\x42\x34\x0e\x62\x12\x10\xb6\xa2\x8c\xc0\x77\xa0\xc6\x74\xc9\x62\x1e\x5c\x39\x93\x74\x47\xf3\x66\xcd\x45\x99\xf1\xf0\x21\x69\x6c\x77\x38\xa0\x82\x5a\x36\xfb\x87\xc4\x79\x09\x00\x00\xff\xff\x9f\xa5\xd0\xd5\xaf\x02\x00\x00"

func db20180414205035_bank_snapsSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414205035_bank_snapsSql,
		"db/20180414205035_bank_snaps.sql",
	)
}

func db20180414205035_bank_snapsSql() (*asset, error) {
	bytes, err := db20180414205035_bank_snapsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414205035_bank_snaps.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180414210204_manual_cash_changesSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xcd\x6a\xdc\x30\x14\x85\xf7\x7e\x8a\xb3\xf3\x0c\x4d\xa0\x5d\x87\x2e\x9c\x58\x0d\xa2\x63\x4d\x6a\xcb\x90\xac\x6c\xd5\xba\x19\x8b\xda\x92\x90\x64\xd2\xbe\x7d\x71\x3b\xfd\x99\x32\x94\xc9\xf2\xea\x7c\x07\x71\x2f\x5f\x76\x7d\x8d\x37\xb3\x39\x04\x95\x08\xad\x5f\xc7\xe6\xd3\x0e\xc6\x22\xd2\x90\x8c\xb3\xc8\x5b\x9f\xc3\x44\xd0\x57\x1a\x96\x44\x1a\x2f\x23\x59\xa4\xd1\x44\xfc\xec\xad\x90\x89\x50\xde\x4f\x86\x74\x56\xd6\xfb\x07\xc8\xe2\x76\xc7\xc0\x3f\x80\x3d\xf2\x46\x36\xe8\x67\x65\x17\x35\x75\x83\x8a\x63\x37\x8c\xca\x1e\x28\xf6\x37\x59\x76\x57\xb3\x42\xb2\x23\x7e\x16\xc2\x26\x03\x7a\xa3\x7b\x70\x21\x37\xef\xde\x6e\xd1\x8a\x86\xdf\x0b\x56\x42\xec\x25\x44\xbb\xdb\xa1\x68\xe5\xbe\xe3\xe2\xae\x66\x15\x13\xf2\x6a\x2d\x68\x37\x2b\x63\xbb\xff\xf6\x7e\x80\x4b\xa4\x70\x01\xe6\x3c\x05\x95\xdc\x25\x68\x20\x15\x9d\xed\xc1\x44\x5b\x6d\xf2\x83\x79\x4e\xf9\x15\xf2\xe3\x6e\x5e\x7d\x5b\xa7\x40\xcf\x6e\xb1\x3a\xdf\x9e\x56\xd5\xec\x16\x9b\xfe\x7c\x70\x12\x6a\x8a\x43\x30\x7e\xbd\x77\x0f\xc9\x1e\xff\x8a\x86\x40\x2a\x91\xee\x54\xea\x51\x16\x92\x49\x5e\xb1\x7f\xd6\xf4\xfa\x0c\x71\x4c\x1f\x6a\x5e\x15\xf5\x13\x3e\xb2\x27\x6c\xd6\x5b\x6f\xb7\x19\x13\xf7\x5c\x30\xbc\x07\xb7\xd6\x95\xb7\x37\xd9\x89\x29\xa5\x7b\xb1\xbf\x5c\xf9\x2d\xca\xfa\x78\x91\x2a\xc1\x4d\x13\x69\x7c\x56\xc3\x97\xd7\xe9\xf2\x3d\x00\x00\xff\xff\xa3\x11\xd2\x51\xae\x02\x00\x00"

func db20180414210204_manual_cash_changesSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414210204_manual_cash_changesSql,
		"db/20180414210204_manual_cash_changes.sql",
	)
}

func db20180414210204_manual_cash_changesSql() (*asset, error) {
	bytes, err := db20180414210204_manual_cash_changesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414210204_manual_cash_changes.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180414210631_foregn_keysSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4d\x6f\xea\x30\x10\xbc\xe7\x57\xec\x0d\x9e\x9e\xf8\x05\x9c\xf2\x88\x79\x42\x45\xa1\x0d\xe1\xd0\x53\xb2\x24\xdb\xc4\x22\xb1\xad\xd8\x88\xf2\xef\xab\x94\x8f\x42\x70\xf8\x68\x73\xe8\xd1\x3b\xeb\x9d\xb1\xb5\x33\xce\x60\x00\x7f\x4b\x9e\x55\x68\x08\x16\xaa\x3e\xce\x5f\xa6\xc0\x05\x68\x4a\x0c\x97\x02\x7a\x0b\xd5\x03\xae\x81\xde\x29\x59\x1b\x4a\x61\x93\x93\x00\x93\x73\x0d\xbb\x7b\x75\x13\xd7\x80\x4a\x15\x9c\x52\xc7\x9d\x86\x2c\x80\xd0\xfd\x37\x65\xb0\xe4\x45\xc1\x45\xa6\x1d\x00\xd7\xf3\x60\x34\xf3\xe7\x61\xe0\x4e\xfc\x10\xe2\x03\x14\xad\x35\x55\x11\x4f\xa3\xb7\x55\x0c\xe3\x59\xc0\x26\xff\x7d\x78\x62\xaf\xd0\x8f\xf7\x48\xfc\x07\x02\x36\x66\x01\xf3\x47\x6c\x0e\x9f\x55\x1d\x43\x3f\xae\x91\xa1\xf3\x30\x5f\x2a\x4b\xe4\xc2\xce\x78\xc4\x1a\x9c\xbb\x7a\x1b\xab\x14\x05\x17\x14\x29\xdc\x96\x24\x8c\x8d\xbc\xd1\xd1\x8d\x06\x80\x1f\xaa\xe8\xf2\xe7\x1f\x67\xcf\xd0\xd0\x06\xb7\x76\x01\x5f\x60\x43\xc3\x1e\x68\x5d\x00\x14\xab\x48\x0b\x54\xd6\x15\x38\x82\x9d\x3e\xbd\x44\xb1\xc6\x22\x4a\x50\xe7\x51\x92\xa3\xc8\xc8\x46\x6e\xe9\xfa\x25\x2a\xa4\xa2\x0a\x8d\x6c\x51\x72\x82\xde\x50\x73\x9a\x24\x9e\xdc\x88\x43\x96\x1c\x83\xa4\x2e\xde\x15\x25\x95\x2c\x0a\x4a\x61\x89\xc9\xaa\xcd\xde\x5e\x30\x7b\x3e\x53\x6a\x0d\x94\xf6\x78\xb8\x72\xff\xcc\x9c\x37\xd7\xfc\x72\xd0\x55\xb3\x77\x30\xaf\xfd\x7d\xdf\x99\x76\x6e\xc3\x6b\x76\xb2\x7c\x99\xd5\x50\x77\x2d\xe6\xe5\xb0\x1b\x06\xe9\x70\x6a\x63\xe1\x87\x1f\x01\x00\x00\xff\xff\x49\xa8\x36\xfa\x04\x07\x00\x00"

func db20180414210631_foregn_keysSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180414210631_foregn_keysSql,
		"db/20180414210631_foregn_keys.sql",
	)
}

func db20180414210631_foregn_keysSql() (*asset, error) {
	bytes, err := db20180414210631_foregn_keysSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180414210631_foregn_keys.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"db/20180414204345_billings.sql":            db20180414204345_billingsSql,
	"db/20180414204720_gateways.sql":            db20180414204720_gatewaysSql,
	"db/20180414204927_online_payments.sql":     db20180414204927_online_paymentsSql,
	"db/20180414205035_bank_snaps.sql":          db20180414205035_bank_snapsSql,
	"db/20180414210204_manual_cash_changes.sql": db20180414210204_manual_cash_changesSql,
	"db/20180414210631_foregn_keys.sql":         db20180414210631_foregn_keysSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"db": &bintree{nil, map[string]*bintree{
		"20180414204345_billings.sql":            &bintree{db20180414204345_billingsSql, map[string]*bintree{}},
		"20180414204720_gateways.sql":            &bintree{db20180414204720_gatewaysSql, map[string]*bintree{}},
		"20180414204927_online_payments.sql":     &bintree{db20180414204927_online_paymentsSql, map[string]*bintree{}},
		"20180414205035_bank_snaps.sql":          &bintree{db20180414205035_bank_snapsSql, map[string]*bintree{}},
		"20180414210204_manual_cash_changes.sql": &bintree{db20180414210204_manual_cash_changesSql, map[string]*bintree{}},
		"20180414210631_foregn_keys.sql":         &bintree{db20180414210631_foregn_keysSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
