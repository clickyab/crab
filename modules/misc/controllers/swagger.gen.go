// Code generated by go-bindata.
// sources:
// swagger/index.json
// DO NOT EDIT!

package misc

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

<<<<<<< HEAD
var _swaggerIndexJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5b\x8f\xdb\xb8\x15\x7e\xb6\x7f\x05\xa1\xf6\xa1\x05\x06\xb6\x93\x0e\xb6\xe8\x02\x01\x9a\x4d\x17\x45\xd0\x4b\x06\x3b\xd9\xbe\x74\x03\x81\x96\x8e\x6d\x6e\x28\x52\x25\xa9\x24\xee\x20\xff\x7d\x21\xea\x62\x5d\x48\x4a\x9e\xc8\x17\x19\xda\xa7\x1d\xf9\x90\x3a\xd7\xef\x9c\x43\x52\xcc\xd3\x7c\xe6\xad\xb1\x84\x07\xac\x76\xde\xf7\xc8\x5b\xe2\x98\x78\x77\xf3\x99\x17\x70\x26\x93\x08\xa4\xf7\x3d\xfa\xef\x7c\x36\xf3\x70\x1c\x53\x12\x60\x45\x38\x5b\xfe\x2a\x39\xf3\xe6\xb3\x0f\x29\x5d\x08\x1b\xc2\x48\xfa\x38\x25\x7d\xd2\xa4\x18\xfb\x7f\x07\x16\x82\x78\xbf\x8f\x21\x7f\x3a\xf3\x54\xf6\x87\x27\x95\x20\x6c\xeb\xcd\x67\xb3\xaf\x77\x05\xf9\xcf\x12\xc4\x1b\x2e\x62\x2e\xf4\x1b\xca\x31\xb1\xe0\x31\x08\x45\xa0\x98\x3c\xa5\x0f\x43\x01\xf2\xf0\xc0\x48\x35\x9b\x79\x8f\xd9\x7b\x0e\x4f\x4c\x2c\xa4\xff\x69\x36\xf4\xef\xff\xc1\x94\x84\xc6\x11\x6b\xce\x29\x60\x56\x0e\x99\xd7\x46\x96\x64\x7c\xfd\x2b\x04\x2a\xa3\xca\x7f\xf4\x02\xa0\x34\xde\x71\x06\xe3\xe1\x98\xa8\xbd\x5f\x9d\xd6\xc2\xef\x5b\xa6\xbe\xbb\x37\xbe\x9c\x30\x05\x5b\x10\xe7\xe2\x57\x00\x56\x10\xfa\x58\x55\x58\xde\x70\x11\xe9\x07\x5e\x88\x15\xbc\x27\x11\x78\xcd\xb9\xaa\x4a\x2d\xe6\x82\x80\x33\x1e\x91\xc0\x0f\x78\x38\x1e\x8b\x6d\x88\x90\xca\x67\x38\x1a\x0f\xcb\x14\x8f\x8d\xe3\x51\x31\x3b\x2e\xc4\x11\xb0\x25\x52\x81\x18\x57\xd4\x25\x71\x38\x18\xee\x24\x12\x44\x1d\x73\x8d\x58\xaa\xd9\xcb\xc6\x18\x58\xcb\x13\xaa\x94\xca\x7f\xfb\xf8\xe0\xcc\xa2\x43\x62\x66\x0f\xb6\xcd\x21\xe4\x9a\x54\x2a\xac\x12\x69\x20\xae\x19\x6c\x50\x53\xf4\xd5\xed\xbb\xc7\x49\xb5\xc3\xab\x36\xe0\x4c\x09\x4e\x29\x08\xff\x47\x21\xb8\xf8\x09\x64\xcc\x99\x84\x47\x12\xc5\x14\x9c\x1a\x87\x94\xbe\x13\x36\x62\x2c\x70\x24\x6b\x20\x40\x14\xd4\x9f\xd8\x90\xe4\x00\x25\x07\x0a\x2c\x04\xde\xb7\xa1\x46\xc1\x17\xd5\x07\x9b\xfa\x00\xcd\x71\x6a\xfb\x77\x6a\x14\x5a\xe8\xcd\xa2\xb1\xde\xd3\x49\x9f\xc8\xb8\x35\x59\x5d\x63\x46\x4d\x1b\x03\xc0\xe5\x32\x16\x15\x95\xaa\xa9\x21\xb7\xa5\xc6\x2c\x89\xeb\x71\xd0\x35\x75\x33\x14\x6c\x79\xa1\x1c\x60\x8a\x86\xe7\xc8\x56\x0b\x31\x83\xed\x1b\x66\x2a\x7d\xad\x6d\x25\x2e\x27\x23\x5d\xa5\x91\xc2\x88\xf9\xaf\x03\x45\x3e\xc1\x63\x4d\x00\x6b\x27\x9c\x0e\xf8\x1b\x8f\x30\xe9\x68\x80\xf5\x9c\x3d\xb1\x7e\xc8\x64\x14\x82\x0c\x04\x89\xab\x1d\xfa\xd5\xd7\x68\x27\x49\xa0\xe7\x4a\x89\x94\x67\x2b\x2e\xfe\x1b\xa2\xf6\x4e\x9f\x38\x89\x98\xb1\xe0\x9f\x08\x0b\x60\xa0\xba\xf4\x20\x0d\x4f\x98\x12\xe7\x14\xe8\x18\xee\x1e\x72\xa9\xdd\x35\x5e\x26\x42\x1f\xcd\x9c\xc4\x11\x8f\x11\x28\x20\x55\xde\x7b\x25\x87\x13\x82\xb9\xd1\xa9\xac\xef\xf8\x36\x04\x3e\xa8\x40\x9b\xeb\x0a\xb4\x30\x90\x3c\x85\x12\x8f\x93\xc7\xe4\xb4\x9d\x72\x5d\x9d\x12\x94\xc0\x4c\xfa\xea\x2f\x3f\x60\x6b\x8d\x9b\xeb\xa0\x51\xef\xb7\xaa\xfd\x0e\x4f\x35\xd4\xf9\x25\xd3\xb5\x1a\xff\xd9\x21\xaa\x9b\xfe\x00\x53\xfa\x03\x0e\x3e\x3a\x65\x61\xf0\xd9\x8f\xb1\x94\x9f\xb9\x30\xe1\x88\x09\xbd\x15\xff\x08\x6c\x30\x26\x77\x10\x7c\xfc\x17\x26\xf4\x01\xef\x29\xc7\xa1\xbb\x1d\x8b\x30\xa1\x83\xbf\xb9\xa3\xaf\xc9\x71\x39\x11\x02\x98\xf2\xc3\x5a\x19\xd5\xd5\xe2\x66\xd4\x4e\x57\x31\x56\x39\xed\x5a\xcc\x5e\xe7\x54\x3b\x48\x63\xed\xed\xae\x50\x7b\xcd\x6b\x2c\xd0\xec\xdc\x1b\xcb\x34\xc7\x9b\xaa\xef\x32\xd5\x6b\x8e\x92\xed\x50\xb5\xd5\x67\x31\xd6\x6e\x75\xa1\x1a\xef\xb0\xed\x31\x54\x87\x34\x60\xa8\x97\xee\x8c\x3d\xc3\xb3\x6d\x32\x6f\xcc\x6f\x96\xd3\x09\x35\xbd\x03\xe4\xd9\xfb\x66\xce\xbe\xc1\xb0\x6b\xe5\xa4\x6f\xed\x19\x39\x6b\x1c\xdb\x36\x8b\xeb\x15\xc6\x4d\x0e\xd7\x00\xd3\x16\x83\x8b\xfe\x98\xd2\xf8\x08\xd5\xd8\x16\xb7\xbf\x09\x16\x37\x5c\x6c\x41\x9d\x0f\x86\x29\xdf\x12\x36\x18\xf8\x17\x5a\xec\x99\xd1\xfa\x32\x19\x83\x90\x9c\xe1\x5e\x49\xea\xaa\xc2\xe1\x68\xd7\xde\xea\xfd\xf5\x13\xc5\x41\x2f\x41\xfb\xda\xa4\xf0\xfe\x3e\x36\x09\x78\x14\x63\xb6\x3f\x86\xd7\x63\xdc\xed\xe4\x00\x12\xf1\x35\xa1\xbd\xb5\x7c\x5c\x39\xa7\x95\x99\x13\x0c\x64\x98\xac\x9e\xfa\x67\x1a\xd9\xef\xfe\xd1\xb1\xe4\xa4\x7b\x87\xce\x55\x1f\x43\x2e\xb2\x53\x9b\x82\xd0\x45\x6d\x2b\x57\x1c\xf5\x4a\xad\x60\x31\x57\x2c\xae\x92\xa5\x52\xb3\xd4\x4b\x1f\x4b\xd5\x52\xab\x6c\x0c\x90\x71\x4b\xd2\x35\x01\xae\x43\xb6\xd6\x59\x91\x99\xab\x96\xbb\xb0\x6c\xe6\xf2\xbc\xa3\x16\xb4\x1b\xaa\x3a\xb7\xa5\xf0\xe9\xd0\xde\x98\x3c\xc3\x84\xb2\x37\x24\x9e\x21\x27\xdc\x90\x74\x37\x2b\xd8\xed\x22\xb1\xa5\xbd\xb8\x21\x09\x2d\xad\xf9\x20\x78\xdc\x3a\x77\x33\x73\xe6\xa5\x52\x8c\xca\xca\x81\x59\x84\x43\xeb\xdf\x28\x51\x7b\xec\x84\x59\xb6\xc1\xac\xa7\x2a\x8b\xbe\x67\xaa\xb9\xa6\x9a\xab\xc2\xc6\x54\x73\xe5\x53\xd8\x2a\x92\x3e\x83\x9b\x9d\x76\xef\x81\xb6\x42\xa1\xcf\xd8\xdb\xf5\xe1\x91\x63\xb9\xa1\x0b\xb7\xe3\xf9\xbc\x36\xd8\x38\xf7\x80\x9b\x35\x73\xfd\x9b\xb7\xe3\x52\x6b\xf1\xc5\xcb\x3f\x2f\x56\x8b\xd5\xe2\x85\xfe\x9c\x83\xb0\x0d\xcf\xa7\x6f\xec\x12\x78\xef\x77\x80\x02\x81\xd7\x08\xc7\xe4\x0e\xe1\x44\x71\xb4\x05\x06\x22\x35\x93\x97\xed\xb8\x11\xa5\x57\x35\x32\x52\x4a\x82\x8f\x7b\xbc\x5e\x04\x3c\x5a\xea\x71\xaf\x1f\xde\x66\x74\x9f\x40\xc8\x7c\xd2\xfb\xef\xbc\x9c\x9f\x18\xab\x5d\xf9\x69\xc8\x12\x4b\x09\x6a\x49\x64\x5c\x2e\x37\x54\x56\x31\x5b\xac\x11\x19\x23\x01\x2a\x11\x0c\x51\x22\x15\xc2\x94\x22\x22\xd1\x1f\x60\xb1\x5d\x20\x22\x30\x4b\xf1\xfe\x0e\x2d\x16\x8b\x3f\x7a\xe5\xaa\x8a\xc0\x11\x28\x10\xc5\x97\x2b\xb3\xd9\xac\x5c\x9e\x68\x4c\xaf\x76\x80\x24\x04\x89\x20\x6a\x8f\xb4\x05\xee\xd0\x16\x14\x22\x0a\x6d\x04\x8f\x90\x5e\xf3\x44\x82\x27\xaa\x72\x52\x48\xef\x2a\x79\x3b\xc0\x29\x2a\x94\x4f\xf3\x38\xcf\xed\x58\x3e\x16\xf0\xbf\x84\x08\x48\x5d\x52\x89\x04\x5a\xbb\x01\x86\x7d\xd1\x0f\xe5\xaa\x71\xb6\x3c\x53\x5d\xa1\x7c\xb9\x5a\x55\x57\x5b\x1a\xe2\x1c\x5e\x2b\x83\x1d\x44\xb8\xe6\xa2\xbf\x17\xb0\x49\x89\x7e\xb7\xac\x7c\xb1\xb3\xb4\x9d\xf6\xb3\x78\xf0\xfd\xea\x85\xe3\xfd\x7b\x9e\x20\x2c\x00\x31\xae\x52\x37\xda\x71\x41\xfe\x9f\xbb\x90\x8d\x2b\x5b\x8d\xd2\x38\xd0\xe9\xa2\x35\x1e\xec\xcc\x2c\xd5\x3a\xdc\xe9\x08\xd6\x06\x10\xd4\x28\x6b\x07\x3d\x5b\x74\xad\x03\x9f\x1d\x6f\x39\x1a\x3d\x4d\x30\x55\x44\x24\xe3\xca\x37\xe8\xda\x0a\x64\x2d\x83\xfe\xc9\x61\xd0\x0d\x17\x6b\x12\x86\x69\x58\xa4\xb6\xdd\xe1\x4f\xa9\x71\x11\x0e\x02\x90\x12\xed\x40\xc0\x64\xdc\x53\x1a\xb7\xd4\x7f\x6f\xbb\xd6\x73\x0a\xde\x56\x40\xb0\x7a\x66\x34\x1b\xf6\x61\x9e\x0f\xc9\x16\x85\x73\x6c\xe6\xb2\x17\x34\x73\x69\x47\x66\x4a\x58\xf2\x65\x82\xe5\x61\x60\xb9\x72\xbc\x77\x42\xe5\x91\x04\xee\x84\xca\x37\x6c\xdc\x33\xa3\x72\x71\xe6\x6f\x99\x1d\xe3\x5c\x3e\x95\x67\xff\x7c\x12\x7e\xed\x85\xd5\xcf\x01\xe1\x26\xb2\xa6\x65\x7c\x1b\x57\xab\xbc\x8c\x07\x5e\x9b\x27\x63\xad\x61\x78\x32\x58\x37\x7e\xe1\x64\x65\xe3\xfe\x92\x6c\xb8\x9c\xb7\x50\x64\x97\xe7\xb6\x4e\xdf\xf6\xf1\xd6\x33\xbb\x42\xc9\xe3\xf0\xf2\x97\x51\xb2\x7c\x3a\x1c\xc1\xbd\x74\xe8\x56\x0e\x03\x8f\x2f\x70\x0f\xe7\x9f\xa7\xd8\x3d\x49\xec\x26\x31\xe5\x38\x5c\x3e\x45\x3c\x4c\x28\x1c\x7c\x35\xce\x56\x97\xcc\xce\xfa\xb3\x1e\x84\x08\x53\x1c\xe9\x22\x7e\x2f\x15\x44\xa7\x73\xe1\x8c\xb9\xe7\xba\xef\x9d\x9b\x85\xd1\x75\x21\x53\x1b\x60\xa0\x9b\xda\x80\xc9\xb8\xa7\x31\xee\x99\xdb\x80\x44\x82\x58\x1a\x8f\x7a\x27\x76\x40\x86\x90\xa8\xca\xb5\x4a\x88\x48\x94\x48\x08\xd1\x86\x0b\x94\x7f\x29\x91\x3e\x10\x28\xdb\x95\xb9\x85\xc5\x9a\x0e\x54\x6f\xf2\xb0\xe6\xe1\xde\xd0\xd6\x64\x67\x55\xfd\x10\x2b\x6c\x64\x64\x83\xa9\x84\xe3\xb3\x77\xeb\xbc\xbe\xc9\x43\xce\x5a\x51\x99\x2e\xdf\xb2\xc2\xd1\x94\x5f\x5a\x74\xb7\x9b\x5f\x2e\x5a\x9c\xa6\x81\xe2\xc0\x41\x0d\x2a\xfd\x6a\xd2\x0c\x7f\x34\xc8\x11\x36\x60\x45\x7a\x01\xe0\xa8\x7d\x82\x71\x71\xe4\x30\x9e\x21\xb7\x7a\xda\x95\x74\x63\x23\x76\x78\x7e\xc8\xf3\xce\x15\x83\x80\x72\x09\x8f\x20\x65\x9a\xf0\xf5\x1f\xb2\xcc\xf5\x32\x7b\x7c\x0b\x79\xfe\xfc\x0e\x6f\xbf\x68\x67\x4a\x98\x53\xc2\x9c\x1a\xb2\x4b\x1b\x77\xd8\x86\xac\x17\x20\x2f\x35\xbe\x72\xb5\x3b\x1c\x10\xec\xc6\xe6\xd7\x94\xbe\x4b\x47\x34\x30\x1a\x53\x8a\xf8\x06\x05\x94\x00\x53\xb2\x80\x6a\x89\xd6\x89\x2a\xf1\x9b\xb3\x9b\xe8\xd1\x26\xec\x9e\xc2\x7b\xc2\xee\xc9\xb8\x17\xc2\xee\x08\x13\xba\xd4\xd7\x8a\xf4\x6b\x21\xcb\x1b\x48\x90\xfe\x3f\x94\x8e\x1f\x7d\x33\xd9\xba\xd0\xc5\xa4\xdf\xf3\x37\x94\xed\xdb\x5e\x86\xb3\x7b\xf1\xc1\xf5\x32\xc0\x94\xae\x6b\x37\xee\x38\xd6\x50\xb3\x8b\x16\xde\xe4\x97\xf4\x20\x22\xf5\xd6\x56\x22\x28\x0a\x78\x44\xd8\x36\x4b\xa1\x32\x4d\xcf\xfa\x43\x1f\xf4\x8b\xfa\x45\xfd\xf5\xa7\x34\x99\xa2\x27\xfd\x47\x4a\xfb\x0a\xb5\x5f\xaf\x7f\x8c\x40\xed\x78\x88\x5e\xa1\x38\x51\x28\xb7\x38\x7a\x85\x8a\x4b\x81\x34\xcd\xcb\xd5\x2a\x7d\x54\xe6\xb0\x45\x3d\x87\x69\x9a\xfb\x26\x8d\xa1\x21\x45\x5f\xc7\xea\xac\xc5\x15\x49\x17\x77\xd2\x67\x14\x12\x17\x5d\xfa\x18\x22\x5c\x9a\x57\x8d\xb8\xb0\x32\xa3\x7d\x28\xae\x36\x18\xa7\xbb\xe5\x02\x4f\xce\x76\x46\x67\x6b\x7c\xc1\xe8\x84\xe4\x1f\x43\xa2\x1e\xf2\x01\x59\xdb\xa2\x77\xb4\x20\x24\x0a\x15\x13\xa1\x58\xf0\x0d\xa1\x37\xd1\x2f\x5d\xff\x9e\x56\xf3\xe2\x9d\x8b\x87\xce\x28\x57\xa7\xa7\x96\xb3\x45\x37\xb5\x9c\x93\x71\x4f\x63\xdc\xb3\xb6\x9c\x71\xe5\xfb\x5c\xe7\x0a\x61\xb6\xae\x98\x76\x19\x69\x46\x4b\x13\x51\xfe\x44\x27\x9e\x6f\x3b\x54\x77\x6d\x69\xed\xda\xb3\xc2\x04\xc7\x2d\xba\x09\x8e\x27\xe3\x9e\xc6\xb8\x67\x85\xe3\xe2\xca\x9c\x7e\x3d\xed\x48\xbb\xd8\xe6\xc5\x8b\x26\xf5\x5d\x31\xfa\x8e\xaa\x93\x2d\xee\x3a\x10\x3c\x4c\x82\xee\x7f\x34\x53\x73\x7d\x20\xdb\x29\x15\x97\x3f\x7d\xc6\xdb\xad\xf6\x4c\xef\xe5\x62\xe5\xcd\xbf\xfe\x16\x00\x00\xff\xff\xea\xe9\x59\xf8\xa2\x73\x00\x00"
=======
var _swaggerIndexJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdd\x8f\xdb\xb8\x11\x7f\x96\xff\x0a\x42\xed\xe3\x62\xed\xa4\xdb\x16\x3d\x20\x40\x73\xe9\xa1\x38\xf4\xe3\x16\x97\x5c\x5f\x7a\x81\x41\x4b\x63\x9b\x09\x45\xaa\x24\x95\xd4\x5d\xec\xff\x5e\x88\xfa\x96\x48\x4a\xde\xc8\x1f\x32\x94\xa7\x58\x1a\x52\x43\xce\xf0\x37\xbf\x19\x92\xc9\xd3\xc2\xf3\x37\x58\xc2\x23\x56\x7b\xff\x3b\xe4\x2f\x71\x4c\xfc\xbb\x85\xe7\x07\x9c\xc9\x24\x02\xe9\x7f\x87\xfe\xbd\xf0\x3c\x1f\xc7\x31\x25\x01\x56\x84\xb3\xe5\x27\xc9\x99\xbf\xf0\x3e\xa6\x72\x21\x6c\x09\x23\xe9\xe3\x54\xf4\x49\x8b\x62\xbc\xfe\x2b\xb0\x10\xc4\x87\x43\x0c\xf9\x53\xcf\x57\xd9\x0f\x5f\x2a\x41\xd8\xce\x5f\x78\xde\xf3\x5d\x21\xfe\x8b\x04\xf1\x8e\x8b\x98\x0b\xfd\x85\xb2\x4d\x2c\x78\x0c\x42\x11\x28\x3a\x4f\xe5\xc3\x50\x80\xac\x1e\x18\xa5\x3c\xcf\x7f\x9f\x7d\xa7\x7a\x62\x52\x21\xfd\xa3\xd5\xd0\xef\xff\x85\x29\x09\x8d\x2d\x36\x9c\x53\xc0\xac\x6c\xb2\x68\xb4\x2c\xc5\xf8\xe6\x13\x04\x2a\x93\xca\x5f\xfa\x01\x50\x1a\xef\x39\x83\xe9\x68\x4c\xd4\x61\x5d\xef\xd6\xa2\xef\x8f\x4c\xfd\xe1\xc1\xf8\x71\xc2\x14\xec\x40\x9c\x4b\x5f\x01\x58\x41\xb8\xc6\xaa\xa6\xf2\x96\x8b\x48\x3f\xf0\x43\xac\xe0\x03\x89\xc0\x6f\xf7\x55\x9f\xd4\xa2\x2f\x08\x38\xe3\x11\x09\xd6\x01\x0f\xa7\x63\xb1\x2d\x11\x52\xad\x19\x8e\xa6\xa3\x32\xc5\x53\xd3\x78\x52\xca\x4e\x0b\x71\x04\xec\x88\x54\x20\xa6\xb5\xea\x92\x38\x1c\x0d\x77\x12\x09\xa2\x89\xb9\x46\x2c\xd5\xea\x65\x6d\x0c\xaa\x65\x01\x35\xe0\x4c\x09\x4e\x29\x88\xf5\x0f\x42\x70\xf1\x33\xc8\x98\x33\x09\xef\x49\x14\x53\x70\xc6\x56\x48\xe5\x7b\xe7\x3f\xc6\x02\x47\xb2\x31\x9b\x44\x41\xf3\x89\xcd\x24\x95\x4d\x2a\x09\x2c\x04\x3e\x74\x6d\xa6\xe0\xbf\x6a\x88\x91\x87\x58\xec\xb8\x69\xfb\x67\x6a\x43\x5a\xcc\x9b\x65\xc6\x7a\xba\x0b\x23\xb6\x7e\x1b\x28\xf2\x05\xde\x2b\xac\x12\xd9\xcb\x83\xd2\x06\x7f\xe1\x11\x26\x3d\xf4\x47\xf7\x69\xf0\x13\x93\x57\x8d\x19\x19\x43\x90\x81\x20\x71\x9d\x9f\x5d\xfd\x0a\x1d\xb0\xa0\xcc\xe0\xee\x5c\xaa\x63\x2c\xfb\x01\x0e\x49\x79\xc6\xb7\xd7\xef\x88\x3a\x38\x7d\xe2\x24\xc3\x8c\x05\xff\x42\x58\x00\x23\xa1\x52\x35\x1a\x9e\x30\x25\xce\x39\xa0\x63\xb4\x7b\xcc\x47\xed\x54\x2f\xc8\x86\x30\x64\x66\x4e\xe2\x88\xc7\x0c\x28\x20\x75\xdd\x5b\x40\x6d\x5c\xbe\x0d\x65\x6d\x9c\xbe\x5c\x7e\x4d\x7d\x2d\xeb\xbc\x94\x36\x3a\x95\xf5\x1b\x8d\x89\x31\xac\xf3\xd6\x1c\x94\x71\xa4\x3d\x05\xda\x5c\x57\x30\x0b\x23\x8d\xa7\x98\xc4\xe3\xc6\x63\x72\xda\xde\x71\x5d\xdd\x24\x28\x81\x99\x5c\xab\x3f\x7d\x8f\xad\x81\x39\x9f\x83\x16\x49\xe9\x50\x94\x1e\x4f\x35\x90\x93\x52\xe9\x06\x31\x79\xf1\x12\xd5\x94\x2f\xc0\x94\x7e\x8f\x83\xcf\xce\xb1\x30\xf8\xba\x8e\xb1\x94\x5f\xb9\x30\xe1\x88\x09\xbd\x15\xff\x0c\x6c\x34\x25\xf7\x10\x7c\xfe\x07\x26\xf4\x11\x1f\x28\xc7\xa1\x9b\x43\x46\x98\xd0\xd1\xbf\xdc\x43\xc6\x72\x5c\x4e\x84\x00\xa6\xd6\x61\x83\x46\xd9\xa8\x44\x49\x6c\xb4\xb4\xd3\x55\x8c\x2c\xa7\xcb\xc5\x86\xd1\x5e\x13\x29\x73\x53\x88\x61\xfd\x1a\x09\x9a\x5d\x7b\x23\x4d\x73\x7c\xa9\xfe\x2d\x13\x5f\x73\x50\xb6\x8a\xb5\x35\x7b\x31\x72\xb7\xe6\xa0\x5a\xdf\xb0\x55\x98\xea\x4d\x5a\x30\x34\x68\xee\x4c\x9c\xee\xe5\x36\x59\xb4\xfa\x37\x8f\xd3\x09\x35\x83\x17\xc8\x8b\xab\xa6\xce\xbc\xc1\x50\xb3\x74\xca\x77\x2a\x86\x4e\x8e\x63\x2b\xb2\xb9\x3e\x61\x2c\x71\xb9\x1a\x98\x0a\x4c\x2e\xf9\x63\xa8\xf1\x11\x53\x63\x2b\x6d\x7c\x13\x2c\x6e\xb9\xd8\x81\x3a\x1f\x0c\x53\xbe\x23\x6c\x34\xf0\x2f\x66\x71\x60\x44\x1b\xaa\x64\x0c\x42\x72\x86\x07\x05\xa9\xab\x5a\x0e\x47\xbb\xf6\x4e\xef\xae\x9c\x68\x1d\x0c\x1a\xe8\x50\x9b\x14\xde\x3f\xc4\x26\x01\x8f\x62\xcc\x0e\xc7\xe8\x7a\x8c\xbb\x9d\x1c\x40\x22\xbe\x21\x74\xf0\x2c\x1f\x47\xe7\xf4\x64\xaa\xda\x76\xda\xb7\x1b\x26\xe3\x53\x7f\x4f\x57\xf6\x4f\x7f\xeb\x29\x39\xe9\xdc\xa1\xb7\xea\x63\x88\x45\x76\x69\xd3\x22\x74\x49\xdb\xe8\x8a\x83\xaf\x34\x08\x8b\x99\xb1\xb8\x28\x4b\x8d\xb3\x34\xa9\x8f\x85\xb5\x34\x98\x8d\x01\x32\x6e\x69\x74\x6d\x80\xeb\x19\x5b\x67\xa7\xd0\x73\x71\xb9\x0b\x8f\xcd\x4c\xcf\x7b\xb8\xa0\xdd\x50\xf5\xbe\x2d\xc4\xa7\x67\xf6\xa6\xe4\x19\x26\x94\xbd\xa1\xe1\x19\x62\xc2\x0d\x8d\xee\x66\x07\x76\xbb\x48\x6c\x49\x2f\x6e\x68\x84\x96\xd4\x7c\x14\x3c\xee\xec\xba\x7a\xce\xb8\x54\x0e\xc3\xb0\x89\xd9\x1c\x42\x95\xfa\xb7\x28\xea\x80\x9d\x30\xcb\x36\x98\xf5\x4c\x4d\x91\xf7\xcc\x9c\x6b\xe6\x5c\x35\x35\x66\xce\x95\x77\x61\x63\x24\x43\x1a\xb7\x33\xed\xc1\x0d\x6d\x44\x61\x48\xdb\xdb\xf5\xe1\x89\x63\xb9\x21\x0b\xb7\xe3\xf9\xa2\xd1\xd8\xd8\xf7\x88\x9b\x35\x0b\xfd\xce\xdf\x73\xa9\x67\xf1\xd5\xeb\x3f\xde\xaf\xee\x57\xf7\xaf\xf4\x61\x5e\xc2\xb6\x3c\xef\xbe\xb5\x4b\xe0\x7f\xd8\x03\x0a\x04\xde\x20\x1c\x93\x3b\x84\x13\xc5\xd1\x0e\x18\x88\xd4\x4c\x7e\xb6\xe3\x46\x94\xae\x6a\x64\xa2\x94\x04\x9f\x0f\x78\x73\x1f\xf0\x68\xa9\xdb\xbd\x7d\xfc\x31\x93\xfb\x02\x42\xe6\x9d\x3e\xfc\xde\xcf\xf5\x89\xb1\xda\x97\x07\x83\x97\xc5\x0e\xe6\x32\xdb\x94\x5e\x3e\x95\x3b\x99\x6b\x12\x3e\x97\x35\x88\x5a\x69\xb3\xa3\xaf\x5f\xd6\x4f\x04\x8e\x40\x81\x28\x4e\x28\x7b\x9e\x57\x16\x22\xcc\x6d\xd2\xd0\xaa\x7f\xa7\x4a\x55\xcf\xf2\x45\xea\xd7\x75\xa9\xde\x0a\xf8\x4f\x42\x04\xa4\x6e\xa5\x44\x02\x9d\x8a\xbe\x61\x6f\xf3\x63\x59\xf9\xcd\x4a\x2c\xf5\x2a\xe3\xeb\xd5\xaa\x5e\x31\xb1\x2a\x2a\x83\x3d\x44\xb8\xe1\x66\xbf\x15\xb0\x4d\x85\x7e\xb3\xac\x9d\xb9\x5e\xb6\xf7\xf9\x2d\xde\xf7\x30\xf6\x77\x7b\x0e\x99\x59\xd5\x78\xb8\xa4\x1a\xcd\x45\x87\x77\x35\xdf\x29\x77\xd7\xb3\x36\x1f\x17\xb9\x7c\x56\x32\xab\x79\x6e\xe7\x2c\xc1\x10\x6f\x3d\xb3\x2b\x94\x3a\x8e\x3f\xfe\x72\x95\x2c\x9f\xaa\x03\x05\x97\x5e\xba\xb5\xa3\x0d\xd3\x5b\xb8\xd5\x69\x8e\x79\xed\x9e\x64\xed\x26\x31\xe5\x38\x5c\x3e\x45\x3c\x4c\x28\x54\xbe\x1a\x67\xb1\xd2\xec\xac\xbf\xe8\x46\x88\x30\xc5\x91\xda\x03\x92\x07\xa9\x20\x3a\x9d\x0b\x67\xca\xbd\xd4\x7d\xef\xdc\x2a\xe8\x01\x40\x90\x08\xa2\x0e\x48\x93\x8d\x3b\xb4\x03\x85\x88\x42\x5b\xc1\x23\xa4\xb7\xf7\x90\xe0\x89\x82\xb6\xb6\x7b\xc0\x29\x01\xee\xe8\x9b\x51\x96\x53\xad\xb6\x87\xd5\x2b\x87\xaf\x1d\x78\x82\xb0\x00\xc4\xb8\x4a\x19\xcb\x9e\x0b\xf2\x3f\x08\x9d\x1e\x68\x4b\x87\x5b\x07\x9e\x5d\xb2\xc6\x83\xcf\xd9\x4c\x75\x0e\x3f\xdb\xc7\xee\x35\x0c\xd6\x92\x6c\x1c\x84\xee\xc8\x75\x0e\x44\xf7\x7c\xe5\x68\xa2\xbe\xe8\x48\x57\xe4\x8f\x71\xb5\x36\xcc\xb5\x95\x33\x77\xc0\xe3\x77\x0e\x83\x6e\xb9\xd8\x90\x30\x4c\xdd\x32\xb5\xed\x1e\x7f\x49\x8d\x8b\x70\x10\x80\x94\x68\x0f\x02\x66\xe3\x9e\xd2\xb8\xe5\xfc\x0f\xb6\xab\x0b\x8d\x2b\x5c\x97\x16\x40\x96\x20\x96\xc6\x83\x2b\x89\x1d\x90\x21\x24\xaa\x76\x45\x10\x11\x89\x12\x09\x21\xda\x72\x81\xf2\x73\x5f\xe9\x03\x81\xb2\x1c\xf3\x25\x48\x7d\x6d\x30\xd9\x83\xea\x6d\x1d\x36\x3c\x3c\x18\xd2\x9a\x6c\xe7\x7d\x1d\x62\x85\x8d\x8a\x6c\x31\x95\x70\x7c\xf4\xee\x9c\x3e\x32\x79\xc8\x59\x19\x95\xe9\x22\xa9\x15\x8e\xe6\xf8\xd2\x91\xbb\xdd\xf8\x72\x51\x72\x9a\x2e\x14\x07\x0e\x6a\x50\x19\xc6\x49\x33\xfc\xd1\x20\x47\xd8\x88\x8c\xf4\x02\xc0\xd1\x38\x50\x76\x71\xe4\x30\x9e\x88\xb1\x7a\xda\x95\x64\x63\x13\x76\x78\x5e\xc5\x79\x67\xc5\x20\xa0\x5c\xc2\x7b\x90\x32\x0d\xf8\xfa\x87\x2c\x63\xbd\xcc\x1e\xdf\x42\x9c\x3f\xbf\xc3\xdb\xef\x3a\xce\x01\x73\x0e\x98\x73\x42\x76\x69\xe3\x8e\x9b\x90\x0d\x02\xe4\xa5\xc6\x57\xae\xf6\xd5\x76\x67\x3f\x36\xbf\xa5\xf4\xa7\xb4\x45\x0b\xa3\x31\xa5\x88\x6f\x51\x40\x09\x30\x25\x0b\xa8\x96\x68\x93\xa8\x12\xbf\x39\xbb\x89\x1c\x6d\xc6\xee\x79\x79\xcf\xd8\x3d\x1b\xf7\x42\xd8\x1d\x61\x42\x97\xfa\x92\xe4\xb0\x14\xb2\xbc\x4f\x89\xf4\xdf\x50\xda\x7e\xf2\xc9\x64\xe7\x7a\xaa\x69\x7e\xcf\x9f\x50\x76\xef\xae\x8e\x67\xf7\xe2\xfa\xc8\x32\xc0\x94\x6e\x1a\xf7\x87\x1d\x35\xd4\xec\xda\xd8\xbb\xfc\xca\x31\x22\x52\x6f\x6d\x25\x82\xa2\x80\x47\x84\xed\xb2\x10\x2a\xd3\xf0\xac\x8f\x2d\xa2\x5f\xd5\xaf\xea\xcf\x3f\xa7\xc1\x14\x3d\xe9\x1f\xa9\xec\x1b\xd4\xfd\xbc\x7e\x19\x81\xda\xf3\x10\xbd\x41\x71\xa2\x50\x6e\x71\xf4\x06\x15\x57\x9c\xb5\xcc\xeb\xd5\x2a\x7d\x54\xc6\xb0\xfb\x66\x0c\xd3\x32\x0f\x6d\x19\x43\x42\x8a\x9e\xa7\xea\xac\xc5\x85\xef\x8b\x3b\xe9\x0b\x88\xc4\x45\x4b\x1f\x63\x2c\x97\xf6\xc5\x49\x17\x56\x66\xb2\x8f\xc5\x45\xad\x69\xba\x5b\x3e\xe0\xd9\xd9\xce\xe8\x6c\xad\xf3\xd8\x4e\x48\xfe\x21\x24\xea\x31\x6f\x90\xa5\x2d\x7a\x47\x0b\x42\xa2\x50\xd1\x11\x8a\x05\xdf\x12\x7a\x13\xf9\xd2\xf5\xef\x69\xb5\xaf\x11\x5f\x7c\xe9\x4c\xb2\x3a\x3d\xa7\x9c\x1d\xb9\x39\xe5\x9c\x8d\x7b\x1a\xe3\x9e\x35\xe5\x8c\x6b\xb7\x0d\x9c\x15\xc2\xac\xae\x98\x66\x19\x69\x44\x4b\x03\x51\xfe\x44\x07\x9e\x6f\x3b\x54\x77\x6d\x61\xed\xda\xa3\xc2\x0c\xc7\x1d\xb9\x19\x8e\x67\xe3\x9e\xc6\xb8\x67\x85\xe3\xe2\x02\xf0\xb0\x9c\x76\xa2\x59\x6c\xfb\x9f\x91\x31\x4d\xdf\x15\xa3\xef\xa4\x32\xd9\xe2\xe6\x96\xe0\x61\x12\xf4\xff\x07\x10\x5a\xeb\x4a\x6c\xaf\x54\x5c\xbe\xfa\x8a\x77\x3b\xed\x99\xfe\xeb\xfb\x95\xbf\x78\xfe\x7f\x00\x00\x00\xff\xff\x7b\x6d\xa9\x96\x6e\x62\x00\x00"
>>>>>>> Add manufacturers (mobile)

func swaggerIndexJsonBytes() ([]byte, error) {
	return bindataRead(
		_swaggerIndexJson,
		"swagger/index.json",
	)
}

func swaggerIndexJson() (*asset, error) {
	bytes, err := swaggerIndexJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "swagger/index.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"swagger/index.json": swaggerIndexJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"swagger": &bintree{nil, map[string]*bintree{
		"index.json": &bintree{swaggerIndexJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

