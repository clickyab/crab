{
	"basePath": "/api",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"aaa_GenderType": {
			"type": "string"
		},
		"controller_ErrorResponseSimple": {
			"properties": {
				"error": {
					"properties": {
						"params": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"text": {
							"type": "string"
						}
					},
					"type": "object"
				}
			},
			"type": "object"
		},
		"controller_NormalResponse": {
			"properties": {},
			"type": "object"
		},
		"dmn_ActiveStatus": {
			"type": "string"
		},
		"dmn_Domain": {
			"properties": {
				"active": {
					"type": "string"
				},
				"created_at": {
					"format": "dateTime",
					"type": "string"
				},
				"description": {
					"properties": {
						"String": {
							"type": "string"
						},
						"Valid": {
							"type": "boolean"
						}
					},
					"type": "object"
				},
				"id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"updated_at": {
					"format": "dateTime",
					"type": "string"
				}
			},
			"type": "object"
		},
		"location_Country": {
			"properties": {
				"id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"location_Province": {
			"properties": {
				"country_id": {
					"type": "integer"
				},
				"id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"location_countries": {
			"items": {
				"properties": {
					"id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"type": "array"
		},
		"location_provinces": {
			"items": {
				"properties": {
					"country_id": {
						"type": "integer"
					},
					"id": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"type": "array"
		},
		"trans_t9Base": {
			"properties": {
				"params": {
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"text": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"user_checkMailPayload": {
			"properties": {
				"email": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"user_checkMailResponse": {
			"properties": {
				"current_domain": {
					"type": "boolean"
				},
				"domains": {
					"items": {
						"properties": {
							"active": {
								"type": "string"
							},
							"created_at": {
								"format": "dateTime",
								"type": "string"
							},
							"description": {
								"properties": {
									"String": {
										"type": "string"
									},
									"Valid": {
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"id": {
								"type": "integer"
							},
							"name": {
								"type": "string"
							},
							"updated_at": {
								"format": "dateTime",
								"type": "string"
							}
						},
						"type": "object"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"user_forget": {
			"properties": {
				"email": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"user_personalPayload": {
			"properties": {
				"address": {
					"type": "string"
				},
				"cellphone": {
					"type": "string"
				},
				"city_id": {
					"type": "integer"
				},
				"first_name": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"last_name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"user_registerPayload": {
			"properties": {
				"company_name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"first_name": {
					"type": "string"
				},
				"last_name": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"user_type": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"user_responseLoginOK": {
			"properties": {
				"account": {
					"properties": {
						"corporation": {
							"properties": {
								"address": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"cellphone": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"city_id": {
									"properties": {
										"Int64": {
											"type": "integer"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"created_at": {
									"format": "dateTime",
									"type": "string"
								},
								"economic_code": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"first_name": {
									"type": "string"
								},
								"last_name": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"phone": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"register_code": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"updated_at": {
									"format": "dateTime",
									"type": "string"
								},
								"user_id": {
									"type": "integer"
								}
							},
							"type": "object"
						},
						"email": {
							"type": "string"
						},
						"id": {
							"type": "integer"
						},
						"personal": {
							"properties": {
								"address": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"cellphone": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"city_id": {
									"properties": {
										"Int64": {
											"type": "integer"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"created_at": {
									"format": "dateTime",
									"type": "string"
								},
								"first_name": {
									"type": "string"
								},
								"gender": {
									"type": "string"
								},
								"last_name": {
									"type": "string"
								},
								"phone": {
									"properties": {
										"String": {
											"type": "string"
										},
										"Valid": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"updated_at": {
									"format": "dateTime",
									"type": "string"
								},
								"user_id": {
									"type": "integer"
								}
							},
							"type": "object"
						},
						"user_type": {
							"type": "string"
						}
					},
					"type": "object"
				},
				"token": {
					"type": "string"
				}
			},
			"type": "object"
		}
	},
	"host": "127.0.0.1",
	"info": {
		"description": "The crab api, auto generated",
		"title": "The clickyab.com/crab API",
		"version": "30"
	},
	"paths": {
		"/location/cities/{provinces_id}": {
			"get": {
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "path",
						"name": "provinces_id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/location_provinces"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					},
					"404": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					}
				},
				"tags": [
					"location"
				]
			}
		},
		"/location/countries": {
			"get": {
				"description": "",
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/location_countries"
						}
					}
				},
				"tags": [
					"location"
				]
			}
		},
		"/location/provinces/{country_id}": {
			"get": {
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "path",
						"name": "country_id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/location_provinces"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					},
					"404": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					}
				},
				"tags": [
					"location"
				]
			}
		},
		"/upload/{module}": {
			"post": {
				"description": "Upload into the system",
				"parameters": [
					{
						"description": "",
						"in": "path",
						"name": "module",
						"required": true,
						"type": "string"
					},
					{
						"description": "the security token, get it from login route",
						"in": "header",
						"name": "token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"401": {
						"description": "you are not authorized",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "not_authorized",
							"type": "object"
						}
					},
					"403": {
						"description": "forbidden, you have no access here",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "forbidden",
							"type": "object"
						}
					}
				},
				"tags": [
					"controllers"
				]
			}
		},
		"/user/logout": {
			"get": {
				"description": "closeSession closes current session",
				"parameters": [
					{
						"description": "the security token, get it from login route",
						"in": "header",
						"name": "token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_NormalResponse"
						}
					},
					"401": {
						"description": "you are not authorized",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "not_authorized",
							"type": "object"
						}
					},
					"403": {
						"description": "forbidden, you have no access here",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "forbidden",
							"type": "object"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/logout/closeother": {
			"get": {
				"description": "closeAllOtherSession closes all of clients sessions but current one",
				"parameters": [
					{
						"description": "the security token, get it from login route",
						"in": "header",
						"name": "token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_NormalResponse"
						}
					},
					"401": {
						"description": "you are not authorized",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "not_authorized",
							"type": "object"
						}
					},
					"403": {
						"description": "forbidden, you have no access here",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "forbidden",
							"type": "object"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/mail/check": {
			"post": {
				"description": "checkMail check mail in system",
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "payload_data",
						"required": false,
						"schema": {
							"$ref": "#/definitions/user_checkMailPayload"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/user_checkMailResponse"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/password/forget": {
			"post": {
				"description": "forgetPassword",
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "payload_data",
						"required": false,
						"schema": {
							"$ref": "#/definitions/user_forget"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_NormalResponse"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/personal": {
			"put": {
				"description": "EditPersonal route for edit personal profile",
				"parameters": [
					{
						"description": "the security token, get it from login route",
						"in": "header",
						"name": "token",
						"required": true,
						"type": "string"
					},
					{
						"description": "",
						"in": "body",
						"name": "payload_data",
						"required": false,
						"schema": {
							"$ref": "#/definitions/user_personalPayload"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/user_responseLoginOK"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					},
					"401": {
						"description": "you are not authorized",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "not_authorized",
							"type": "object"
						}
					},
					"403": {
						"description": "forbidden, you have no access here",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "forbidden",
							"type": "object"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/ping": {
			"get": {
				"description": "logout is for the logout from the system",
				"parameters": [
					{
						"description": "the security token, get it from login route",
						"in": "header",
						"name": "token",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/user_responseLoginOK"
						}
					},
					"401": {
						"description": "you are not authorized",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "not_authorized",
							"type": "object"
						}
					},
					"403": {
						"description": "forbidden, you have no access here",
						"schema": {
							"properties": {
								"error": {
									"properties": {
										"params": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"text": {
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"title": "forbidden",
							"type": "object"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		},
		"/user/register": {
			"post": {
				"description": "",
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "payload_data",
						"required": false,
						"schema": {
							"$ref": "#/definitions/user_registerPayload"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/user_responseLoginOK"
						}
					},
					"400": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/controller_ErrorResponseSimple"
						}
					}
				},
				"tags": [
					"user"
				]
			}
		}
	},
	"produces": [
		"application/json"
	],
	"schemes": [
		"http"
	],
	"swagger": "2.0"
}