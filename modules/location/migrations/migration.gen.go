// Code generated by go-bindata.
// sources:
// db/20180325065223_locations.sql
// db/20180325065525_seed.sql
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _db20180325065223_locationsSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x5d\x6f\x9b\x30\x14\x86\xef\xfd\x2b\xde\xbb\x82\x96\x4a\xdd\xc5\xa4\x49\x51\x2f\x5c\x38\xc9\xac\x51\xa7\x35\x66\x6a\xaf\x20\x03\x77\xb5\x9a\x42\x14\x60\x6d\xff\xfd\x44\x48\x48\xdc\x65\xd1\xbe\x7a\x99\x13\xfb\x3c\xe7\x7d\x80\xc3\x4e\x4f\xf1\xee\xd1\x7e\x5b\xcd\x1b\x83\x64\xd9\xfd\x8c\xaf\x23\xd8\x12\xb5\xc9\x1b\x5b\x95\x38\x49\x96\x27\xb0\x35\xcc\xb3\xc9\xdb\xc6\x14\x78\xba\x37\x25\x9a\x7b\x5b\xa3\xbf\xd7\x1d\xb2\x35\xe6\xcb\xe5\xc2\x9a\x82\x05\x8a\xb8\x26\x68\x7e\x11\x11\xc4\x04\x72\xa6\x41\x37\x22\xd6\x31\xb2\xbc\x6a\xcb\x66\x65\x4d\x9d\xc1\x63\x99\x2d\x32\x08\xa9\xbd\xf7\x67\x3e\x12\x19\x8b\xa9\xa4\x70\x7d\x5c\x26\x51\x04\x9e\xe8\x59\x2a\x64\xa0\xe8\x92\xa4\x1e\xb1\xac\x9c\x3f\x9a\x0c\x5f\xb8\x0a\x3e\x71\xe5\x7d\x38\xf3\x87\xb3\x23\x76\xa5\xc4\x25\x57\xb7\xf8\x4c\xb7\xf0\xba\xc6\xfe\x88\x25\x52\x5c\x27\x04\x21\x43\xba\xd9\x43\xa7\x5d\x9f\xb4\xb5\xc5\x73\x06\x6f\xd3\x94\xc7\x81\xef\x33\x92\x53\x21\x09\xe7\x10\x65\x59\x85\x17\x2c\xa4\x09\x4f\x22\x8d\x8e\xc7\x03\x4d\x0a\x31\x69\x9c\xa3\x6d\xee\x3e\x8e\xd9\xd1\xa0\xcb\x55\xf5\xdd\x96\x79\x1f\x14\xf8\xc3\xa8\xc0\xd1\xb0\xd8\xa6\x79\x49\x8f\xf6\xed\x4e\x1e\x12\x03\xb8\x6a\x86\x61\x7b\x35\xbb\xde\x69\x5b\xda\xc2\xb8\x9e\x46\x2e\xbc\x37\x07\xbc\x76\x07\xfc\x83\xbd\xdc\x36\xf6\xcd\xd4\x6d\xd3\xfe\x1f\x77\xfd\xa8\xbd\xb8\x9d\xc7\x5f\xaa\x73\xe0\x7f\xed\x8e\x47\x5d\xa9\x57\xd7\x0f\xc0\x00\x1e\x86\x08\x66\x32\xd6\x8a\x0b\xa9\x37\x75\x77\xa6\xbb\x07\x36\x99\x29\x12\x53\xd9\x67\xda\x9b\xc6\x87\xa2\x09\x29\x92\x01\xc5\x18\x2e\xc1\xb3\x85\xff\x0a\x38\xfc\xf9\x33\x73\x07\xdb\x7d\x6d\x6b\x2c\x1c\xec\xee\xfd\x71\xa8\xc3\x9d\x43\xd4\xb6\x36\xab\x03\xc4\xae\x9c\xe6\xb6\x79\x39\x14\x6f\x53\x77\x21\x6b\x2d\x5b\xc2\xfe\xf2\x0b\xab\xa7\x72\xbb\xfe\x86\xdd\xd7\x15\x7f\x6b\xfb\xad\xaa\xc5\xc2\x14\xf8\x3a\xcf\x1f\x58\xa8\x66\x57\xce\xd3\x19\xef\x97\x06\x49\x4e\x75\x08\x3f\x66\xec\x47\x00\x00\x00\xff\xff\xab\x4e\xf7\x9a\x94\x05\x00\x00"

func db20180325065223_locationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180325065223_locationsSql,
		"db/20180325065223_locations.sql",
	)
}

func db20180325065223_locationsSql() (*asset, error) {
	bytes, err := db20180325065223_locationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180325065223_locations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _db20180325065525_seedSql = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x5b\xcb\x8e\x1c\xc9\x75\xdd\xf7\x57\x24\xb4\x69\x0d\xdc\x82\x2b\x23\x32\xb3\x32\xc1\x95\x01\xd1\x80\x80\xb1\x04\x6b\x66\xbc\x15\xc6\x64\xc3\x6a\x78\x44\x12\x43\xca\xb2\x97\xdd\x5d\x2f\x14\xfa\x03\xb4\xe6\x42\x55\x6c\x15\xab\xa6\x1e\x24\x4d\x2e\xf8\x1d\x11\xd5\x3f\x63\xdc\x67\xdc\xc8\xe2\x00\x5e\x56\x9c\xc8\x78\x9c\xb8\x71\xe3\xdc\x1b\x51\x67\xbf\xfa\x55\xf1\x0f\x7f\xba\xfa\x8f\x1f\xbf\x7f\x75\x59\x7c\xf7\x02\x7e\x7e\xf3\xaf\x5f\x17\x57\xcf\x8a\x97\x97\x4f\x5e\x5d\x3d\x7f\x56\x9c\x7f\xf7\xe2\xbc\xb8\x7a\x59\x5c\xfe\xf7\xe5\x93\x3f\xbf\xba\x7c\x5a\xfc\xe5\x8f\x97\xcf\x8a\x57\x7f\xbc\x7a\x59\xd0\x77\x50\xe9\xea\x65\xf1\xfd\x8b\x17\x3f\x5c\x5d\x3e\x3d\xfb\xcd\x6f\xbf\x79\xfc\xfb\x6f\x8b\xdf\xfc\xf6\xdb\xdf\x15\x4f\x9e\xff\xf9\xd9\xab\x1f\xaf\x2e\x5f\x16\xbf\xbc\x7a\x7a\xf1\xec\xfb\x3f\x5d\x7e\x55\xfc\xdb\x3f\x7d\xfd\xdd\xe3\x6f\x8a\x5f\x96\x17\xbf\x08\x8b\x87\xbb\xb0\x0d\x8b\x38\xf9\xc5\x57\x8f\xb2\x0f\x8b\x17\x3f\x3e\xff\xaf\xab\x67\x4f\xcc\x97\x17\xdc\xda\xff\xfc\xe1\xea\xa9\xb4\x72\x56\x40\x3b\xc5\x79\x78\x1d\x7e\x0a\xdb\xb0\x0c\x8b\x38\x0f\x2b\x68\xb0\x08\x87\xb0\x8d\x37\x71\x7e\x7e\x51\x7e\x75\x01\xf5\xdc\xcf\xd4\xfb\x04\x05\xa6\x9e\x87\x7a\x8b\xb0\x0d\x1b\x28\x8e\x23\x05\x2a\x02\xde\xc5\xeb\x38\x85\x4f\x15\xa8\x11\x88\xa3\xb0\x0c\xdb\xb0\xd3\xe2\x86\x8a\xe7\x71\x14\x16\x71\xac\xc5\x43\x28\x5e\xc6\x59\x38\xc4\x69\xd8\x6a\x71\x0b\xc5\xf7\x50\x94\xb5\xdd\x5d\x14\xe7\xc7\x09\x74\x18\xb6\x71\x1c\xde\x42\x3f\x45\x58\x86\x75\xb8\x8f\x73\x2c\x4c\x23\x2f\x07\xd0\xc6\x1a\x5a\x08\x7b\x9a\xdc\x2a\x4e\xe2\x2c\x9b\x5e\x59\x9e\x54\xda\x86\xf7\x71\x66\xab\xb8\x93\x2a\x87\x38\x86\x9e\x6d\x25\xe4\x69\x1d\x67\x61\x17\xf6\xe1\x3e\x1b\x74\x89\x54\xed\xe2\x84\x38\x4e\xe5\xc8\xd4\x3e\x8e\xe3\x24\x2f\x6f\xa8\x7c\x2e\x2d\x15\x71\x56\x84\x65\x1c\xc5\xd9\x71\x72\xda\x3a\x30\x18\xaf\x71\x8d\xf6\xa9\x14\x08\x8c\x37\x61\x07\x53\xb1\xb5\x3b\x2c\x37\x0b\xe0\x80\xa6\x78\x8b\x2b\xdc\x6f\xdb\x95\x8c\xe1\x7c\x4d\xb9\xcb\xca\xc3\x21\x2c\xe2\x34\xa1\x1e\xd1\x38\x8d\xb7\xb0\xdc\x38\x82\x29\xcf\x61\x16\xe7\x48\xe4\xdb\x38\x0e\x9b\xf4\x05\x30\x74\xdc\xc4\xd1\xe9\x08\x6a\x42\xc8\x6c\x4c\x39\x70\x14\x47\x30\xe7\xfe\x17\xc8\xc7\x38\x2c\x90\xf1\x4d\xcf\x80\x5c\x4b\xe8\x36\xde\x86\x9d\xdd\x0e\xc8\xcb\x14\x67\xb4\x3b\x6e\xb2\x6f\x3c\x32\x34\x85\x11\xe7\xe5\xc8\xce\x3c\xec\x68\x26\x8f\xce\xce\xf2\x4d\xfb\xe4\xea\x95\xec\x75\xd9\xbf\x7f\xe0\xdd\x5b\xf4\xb6\x2c\x5a\xe1\x3d\xec\x18\x68\xef\x5c\xb7\x28\xf1\x0f\xf3\x88\x33\xec\x5b\x37\x65\x49\xfb\x06\x67\x48\xbb\xfb\x3a\xac\xa1\x4a\x9c\x9e\xeb\x06\x2d\x79\xb2\x61\x11\x3e\x69\x79\x2d\xe5\xb0\x63\x4c\xfd\x86\x1b\x3d\x84\x25\x92\xba\x3d\xd7\x1d\x2a\xed\x40\x77\xe7\xba\x41\xb1\xf6\x2a\x8e\xc0\xf8\xce\x75\x7f\x62\xe9\x1e\xfb\x5c\x9e\xa7\x9d\x58\x12\xbf\x8b\xb0\x89\x73\xde\xeb\x69\x07\xea\x64\xcc\x37\x69\xf6\xa3\x38\x07\x66\xce\xd3\x4e\x63\xba\xf6\x71\x16\x56\xe7\x69\x93\x95\xe4\x62\x4c\xdb\xb5\x76\x0c\xc4\xee\xcf\xd3\x06\xc3\xba\x1f\xc3\x2a\x2c\xc3\x01\x6c\xf2\x3c\xed\x26\xfe\xe2\x00\x1c\xc4\x99\xce\xb8\x6c\x95\xb8\x51\xbc\x35\xab\x51\xca\xac\x97\xba\x61\xc3\x6b\xf0\xaa\xfa\xa9\x13\x02\x66\xe0\x12\xe3\x8d\xf9\xd8\xc9\xf4\x17\x61\x1f\x6f\xe3\xec\x3c\xed\xb0\xe4\xca\x8b\x8c\x31\xc7\x0c\xc4\x9b\xb0\x8d\x53\xe8\xeb\x53\x58\x28\x11\x4e\xd7\x3d\x8e\xf3\x9e\x98\x8c\xf0\x2e\xce\xe2\xf5\xc3\x9d\x85\x84\x90\xc5\xc3\x5d\x1c\x85\xf5\x71\xf2\x70\x77\x9e\xb6\x13\xfb\xc8\x3d\xd2\x91\x8d\xa4\xd5\x99\x2f\xd8\x91\xe9\x30\xd4\x14\xe2\xd4\x98\x0d\xec\x25\xc7\x47\x4a\x9c\x81\x0d\xaa\xfd\xc1\x76\x42\xbf\x32\x89\x37\x61\x93\x8a\x1d\x17\x83\xab\x49\x04\x79\xcf\x0d\xdd\xc3\x5a\xa8\xd9\xf8\x8a\x8b\xd7\xe8\xc3\xb9\xb0\x96\x26\xd0\x02\xed\xca\xf8\x86\xeb\xef\x81\xe5\x0d\x2c\xba\x20\x43\x42\x8e\x13\x3c\xcc\xc4\x91\x30\xd8\xf2\x67\xe0\xd1\xac\x2d\xf8\x4e\xbb\xc2\xdd\x85\x1b\xf7\xb5\x0e\xaf\x92\xe9\xef\xe3\x08\x7d\x94\x98\x64\xc5\x93\x27\x57\x0a\x2e\xbb\x08\x9b\xe3\x5f\x05\x15\x0e\x3e\x93\xfb\x04\x97\x6b\x96\xa1\xf2\xda\x2a\x78\xda\x23\xa0\xe3\xe4\x07\x2a\xa5\xfc\x00\xe7\x9f\xa1\xbc\xaa\xd3\x1c\x1f\xee\xe2\x67\x5c\x15\x05\x1b\xed\x74\x94\x31\x53\x0d\x65\xac\x71\x16\x3e\x48\x61\x7b\x51\x9c\x68\x05\x86\x3a\x86\xc0\x2b\x7c\xc4\xe3\x88\x3d\xd1\x80\x01\xac\x0d\xa6\x0c\x3b\x7a\xa1\xf3\xaa\x4b\xc2\x69\x60\x61\xdf\xdf\x56\xb5\xe3\xef\xd7\x60\xb4\xb0\x4c\x02\x78\xfe\x70\x1c\x0e\x78\x78\x4c\xf2\x1d\x54\x57\x8a\x7f\x32\x8b\x57\xd7\x5c\x3c\x41\xc3\xd4\xe2\x46\x8b\x93\xa3\xa8\x87\x5c\x78\x1b\x67\xe1\xef\xa9\xb8\xd5\xe2\xb9\xb1\xc0\x9a\x29\x38\x6e\xe0\x84\xd1\xe2\x66\x70\x51\x9c\xe8\x28\x86\x4a\x82\xe2\x35\xba\xae\x4d\x02\x5c\x0f\x98\xf5\x67\xd7\x78\xa9\x81\x87\x26\xf8\x9c\x95\x6d\xb9\x22\x18\xce\x5b\x60\x36\xce\xf9\xbc\x63\xb8\xe6\x31\x6d\x70\x3c\xd6\x83\x34\x0d\x37\x3c\x09\x1f\xe2\x44\xcf\xa9\x66\xa8\xc5\xa0\xef\x12\x71\x4d\xcb\x4d\xdd\x8b\xd9\x0a\xd0\xf1\x17\xb0\x75\x0f\x06\x18\x0e\x74\xe8\x33\x18\x7c\xd8\xe4\x53\x1b\x96\x4a\x98\xd5\x2b\x0c\x32\x33\xe8\x89\xe6\x40\xb4\x00\x5e\xa6\x14\xb6\xc7\x74\xe0\x0d\x85\x88\x37\x71\x16\xa7\x40\xc5\xc3\x5d\x02\x99\x86\x38\x46\x93\xdb\x82\x9e\x11\x88\x69\xa0\x91\x85\xf7\x7a\xfa\x0d\x99\x88\xb0\x26\xfb\x89\xf3\xde\xe8\x85\x0f\xb3\xc9\x33\xbc\x53\x22\x57\xf1\xba\x6f\xed\xed\x40\x17\x06\xb8\xb9\x3f\xc1\x85\x9b\x1d\x18\x46\xbf\xed\x56\xc8\x79\x4d\x2b\xc1\x7a\x6c\x1e\x36\x60\x07\x52\x49\x88\x82\x76\x3f\x01\x8e\x27\x76\xb6\x76\x6d\xa5\x93\x44\x49\x02\x9a\x38\xf5\xa2\xac\x21\x35\xd6\x6b\xb4\xc2\xda\x47\x92\x84\x61\xa5\x84\xb6\xc2\xdb\xc7\xb0\x3f\xf6\x7a\x6b\x85\x92\x38\x0d\xef\xbf\x30\x69\xa6\x0c\x42\x81\xb0\x02\xc2\x73\xbc\x1b\xa8\x09\xce\x60\x38\xc7\x37\x02\xc8\xfe\xa2\x23\x39\x59\x45\xe7\x2e\x8a\x5e\xac\xc2\x80\x27\x80\xe7\x96\xc6\xd8\x55\xfc\xc5\x26\x4e\x51\x92\x1a\xa8\x66\x08\x46\x85\xbb\xcc\x82\x0d\x83\x28\x40\x88\x4d\x70\xde\x5b\xac\x39\xd3\x55\xe9\x86\xd2\x3e\x9d\xf7\x76\x59\xbb\xd6\x8c\xd6\x4a\xc4\xae\x63\x80\xa5\x18\xf8\x57\x95\x63\x83\x8b\xa2\x17\x77\x09\x52\x32\x72\x1f\x27\xc7\xfe\xfe\x2a\x07\x8e\x51\x5c\xd7\x13\xd4\x0b\x6a\xf5\xd4\xa0\x4a\xa5\x70\xe6\x69\x79\x4d\xe5\xa0\x6e\x33\xff\x53\x0e\x1a\x42\x8e\x1b\x64\x6b\x66\xc6\x3d\xe4\xb6\xb6\x7d\x0d\x39\x68\xed\xc8\xd4\xbf\x96\x83\x8e\xcb\xc1\x58\xc1\xf3\x1a\xc1\x58\x0a\x0b\x0b\xd2\xfd\x5a\x2e\x1c\x2c\x91\xb9\x5d\xe6\x3c\xcb\x52\x38\x58\x93\x57\xd0\x72\x99\xfd\xca\xb4\xc4\x73\x3f\xbe\x09\x8b\xe3\x1b\x95\x54\x65\xc9\x73\x07\x7b\x87\xcd\x60\xdc\x4e\x59\x36\xa6\xf7\x0d\xca\x98\xd4\xf7\xf0\xa2\xe8\x05\xc6\x82\xb4\x84\xa0\x35\x2f\xb2\xd3\xab\x04\x79\xda\x92\x4f\x25\x33\xdb\xc1\x99\x95\x7a\x04\x71\xda\x32\xab\x5a\x56\x72\xd9\x06\x65\xd7\xcc\x28\xb8\x12\xa4\x69\x2b\x8a\x15\x37\x48\xbe\x16\x20\x4f\xb9\xbd\x19\x6e\x09\x1d\x09\x48\x53\x1c\xc9\x08\x8f\xf9\xbd\x9d\x01\xa8\xd3\x56\x14\xd5\x38\xfb\xaa\x91\x59\x87\x15\xad\xbc\x22\x43\x99\x19\x08\x1e\x2d\x15\x2e\x6e\x59\xf6\xef\xd2\x2a\x39\xe1\x02\xce\xbd\xdb\xcc\x3f\x95\x9e\x79\x90\xfc\x02\xed\xd7\x63\x52\xa2\xa5\x17\x56\x0e\xe8\x61\x4f\x3c\x74\xe9\x99\x1a\x50\xe6\xc7\x49\xea\xd6\x0b\x25\x4b\x3c\x51\xb7\x39\x61\xbe\x92\x66\x79\xc0\x0b\x83\x09\x2d\x98\xa6\x09\x1f\x0a\x8c\xba\xe7\x69\xb6\xbe\xd1\x2e\x37\x29\xc0\xf1\xc2\xcc\x18\x4f\xd1\xad\x19\x62\x7b\x51\x74\xa9\xb3\xdb\x0c\xeb\x08\x93\x6c\x82\x5d\x1f\x50\xae\x1d\xdb\x25\xec\x22\x83\x94\x84\x1c\x27\x71\x84\xde\x5b\xdb\x03\xd9\xda\xe9\x69\xad\xfe\xac\x04\xbd\xda\x49\xfc\xbe\xc9\x77\x3f\xa8\xd5\x8e\xfc\xd6\x82\xb3\x0e\x82\x40\xfc\x32\xa0\xa9\x2e\xc2\xdf\x0c\xd0\x08\x70\x8d\xfd\xcc\x12\x0f\x20\x55\x29\x0f\xb4\x44\x09\xb2\xb2\x86\x0c\x92\x95\xbe\x83\x15\xa7\x58\xda\xf6\xd7\xc9\xb7\x7b\xca\x89\x01\x65\x02\x82\x74\x25\xf0\x03\x84\x7d\x45\x1c\x87\xfd\xc3\x1d\x38\x2c\xad\x51\xea\x70\xe3\xb4\xef\x2b\x41\xb9\xd2\xe7\x28\x08\xb3\x60\xac\x04\xf5\x5a\x72\xc8\x0d\xab\xa4\x03\x06\xd9\x4a\x00\x28\xd1\x03\xba\xf5\x99\x09\x76\x6b\x86\xc3\x3e\x2c\xc3\x2e\x93\xd2\x25\x88\xd8\xb2\x54\xcd\x05\xd1\xbc\x42\x43\x86\xc8\xe3\xe6\x26\x0d\x82\x96\x1a\xc5\x89\x6a\x71\x27\xc5\xf7\x68\x9a\xf7\x45\x78\x0b\x62\x02\x8d\x53\x59\x02\x7d\xcb\x19\x36\x3c\x9c\xae\x15\x28\x4f\x3e\x5f\x99\xa3\xb6\x04\x91\x2b\xf8\x02\xc3\x7f\x33\xa4\x46\xf9\xb9\xc1\x8c\x98\xa1\xae\xa9\x12\x05\x5b\x08\x59\x15\x50\x6e\xc8\xaf\x42\xac\x9d\xbe\x52\x6e\xae\x69\x73\x65\x4d\x2a\x3b\x13\x64\x27\xf3\xbb\x8d\xb2\x03\xd2\x72\xa3\x92\xb8\x6c\x3a\xa5\x1b\x77\xa0\x7a\x99\xe1\x20\xf1\xb9\x8d\x37\x20\xb1\x14\x2a\xcd\xe0\x0b\x12\xc0\x0f\x77\xe6\x53\x20\x85\xa2\x4e\xce\x64\x9a\xbd\x06\x1a\xb7\x74\xe2\x96\xaf\x71\x98\xe6\x10\x00\xad\x4b\xf0\x0a\x84\x92\x3d\xef\x40\xe9\x96\xae\xa7\x43\x14\x6c\x04\x7c\x1d\x0e\xbd\x04\x53\x09\x7a\x17\x41\x0e\x6b\x12\xd0\xca\x57\x7b\x0a\xf4\xd3\xa9\x0b\x1a\x97\x92\xa5\x20\x81\xc1\x44\x95\x33\x10\xb8\x02\x7d\x29\xcc\x2d\x41\xe1\x52\x05\x88\x3c\xf5\x18\x00\x69\x4b\xc5\xec\x8e\xed\x04\x40\xd2\x72\x72\x16\x93\x7b\x79\x83\x15\x83\xb0\x7d\xc3\x0a\xa2\x0d\x38\x90\x7b\x16\x00\xa2\x36\x8d\xeb\xa7\x34\x4d\x90\xb4\x66\x3c\x26\x67\x56\x82\xa4\x95\x6f\x26\xa8\x7d\xa0\x6b\x3d\x10\x40\xd6\x12\x0c\x11\xef\x1e\x25\x90\x59\xcc\x56\x48\x02\x8a\xf0\x04\xd3\x3e\x3b\x25\x69\x13\x76\x14\x26\x29\x94\xe8\x01\x16\x72\xbf\xda\x29\x49\x92\x34\xc4\x49\x4e\x73\x42\x3a\xdf\xaf\xc5\x5e\x78\x5c\xa4\xa0\x46\x2b\x57\x69\x8e\x63\x0c\x45\xcd\xd6\xef\xea\xd4\xd2\x94\x02\x09\x33\x18\x25\x8e\xd4\x0a\xe7\x5d\x15\x56\xf2\x28\x0e\xa1\x8c\x9b\xa2\x6d\x22\x07\xa9\xcd\x05\x5a\xa7\xdc\x8d\x38\x47\x4f\x80\x1b\x0c\xb2\x4e\xc3\xe1\xe1\x2e\x25\xb2\x06\xca\xdd\x5b\x74\xc7\x1b\xa3\xc9\xdc\xc0\x25\xce\x3f\x61\x2e\x75\x64\x40\xaf\x36\x84\x3b\xfd\xef\x30\x98\x94\x3e\x1b\x08\x0f\x20\xf3\xe0\x8c\x50\x00\x38\xe8\xdd\x0c\x08\x34\x14\x68\x81\xcc\xa5\x51\xb6\x02\xac\xc1\xca\x69\x91\xcc\x50\x3a\x81\x3f\xd0\x05\x89\x00\x98\x80\xad\x24\x89\x36\xe5\x8c\x7d\x4a\x41\x96\xa9\xd9\x2d\xa6\xb9\x53\x16\xc8\x61\x22\xb6\x12\xeb\x5f\x65\x29\x51\x87\xc9\xd8\x3c\xe8\xec\x65\x3e\x31\x2f\xcb\x81\xe7\xb2\x30\x79\x5c\x87\xc9\xd9\x8a\xdc\xf8\x1c\xa7\x93\x20\xe0\xa6\x77\x3b\x22\xd0\x50\xa0\x03\x0b\x77\x3b\x9c\x96\x41\x72\x48\x59\x68\xea\x30\x4d\x5b\x67\xb1\x52\xbc\x4d\xe6\x81\x39\xda\x9a\x16\x79\xd1\x4b\x0c\x39\xcc\xd2\xd6\x17\x9c\xe3\xfd\x60\x8e\x2a\x87\x99\xda\x86\x28\x80\x01\x6d\xb2\xef\x3c\x83\xc7\x09\xaf\xa5\x19\x10\x66\x6a\x1b\x89\x25\x0e\x5a\x5c\x4b\x31\x86\x6e\x99\x3f\x76\x98\xa9\x95\xde\x20\xaa\x53\x60\x68\xbf\x5a\x1a\xbf\xea\x30\x4b\xdb\xb0\x6c\x88\xb7\x79\x06\x17\xf3\xb4\xcd\xcf\x3b\x5d\x07\xb2\x98\x2a\x6c\x29\x47\xad\x40\x29\xcd\x8e\x49\x5b\x65\xc1\x9a\x03\x2d\x8c\x77\x53\x74\xac\xd8\x01\x81\x1c\x2e\x39\xf4\xba\xc1\xf4\xbe\xae\x20\x68\xe1\x92\x23\xb9\x45\x76\x89\xe0\x40\x0a\xcb\x65\xd7\x5e\x75\x96\x03\x01\x5c\x0e\xe5\x82\x62\x96\x69\x7a\x07\x3a\xb8\x1c\xaa\x65\x73\xc6\x43\xd1\x56\x50\x36\x5a\x33\xfa\x4e\x5a\xbd\xc5\x18\x70\x6b\xe2\x30\x07\x5a\x98\xbb\x04\x23\x33\x3e\xd1\x81\x18\xa6\x26\xf7\x98\xac\xcd\xac\xa1\x12\x4a\x48\x94\x6b\xb1\xd7\x89\x49\x84\x76\xb2\x8d\x2a\xe5\x65\x95\x45\xab\xae\x52\x56\x30\xdd\x94\xdd\x1f\x55\x8d\xf2\x0c\x02\x14\xfc\x70\x36\x9c\xa1\x19\x0e\x5e\x13\xa5\xee\xda\x34\x43\x63\x0b\x95\xb0\xf2\x73\xe9\x16\x57\x0f\xd2\x70\x40\x9f\xf4\xe1\x32\x8d\x08\xa4\xfa\x6d\x76\x3f\xa1\x16\xf3\x0e\x23\x90\xcc\x0c\x6b\x6f\xbf\xdc\xf7\x5d\x66\x2d\xfc\xa0\x33\xd9\x52\x56\x1e\x33\x3b\x73\x53\xa9\x4e\x8b\x33\xa3\x48\xcb\x80\x4d\x32\xaf\x2d\xa6\x25\x97\x26\x58\x70\xb5\x5a\x12\x5d\x83\xe4\x82\xde\xd5\xad\x19\xde\xf1\xaf\x06\x10\xca\x8e\x1b\x4c\xbd\xeb\xc2\x35\x83\xcc\xd2\x31\x5d\x9c\xee\x63\x94\xa7\x1d\xaa\x44\x7b\x55\xe3\x92\x49\xe3\x55\xd3\x0e\x8e\x9b\xac\x86\x50\x75\x7c\x93\xc5\x00\xae\x49\x9b\x2b\x4e\x8b\xb0\x84\x73\x4e\x31\xe5\x06\x16\x6c\x59\x50\xae\x2a\x6c\xff\x31\xac\x81\x10\xad\xa6\x26\xb5\xe4\xf4\x5f\xd2\xb6\xae\xb1\xbb\x8d\x0e\x76\x85\x94\x9f\xb5\xbd\x24\x6a\xd4\xa0\xf6\x30\x87\xb0\x2e\x98\x8d\x09\xd2\xa5\x53\x42\xd5\xdc\xbb\xd2\x16\xa8\x64\x08\x17\xe4\xb6\xbf\x30\x28\x9a\x5b\xde\xe3\xe0\xfe\x14\xf0\x02\xc0\x4c\xfe\x46\x87\xd7\x8e\x12\x2b\x5a\x07\x08\xd3\x1b\x73\x29\xac\x2f\x8a\x9a\x0f\xd9\x38\xca\x17\x07\xe4\x72\x4d\x19\xdc\xff\x3d\xb5\x7e\xd0\xcb\x74\x00\x61\x96\x6a\x9a\x45\xe6\x0e\x44\x73\xad\x57\x8f\x99\x20\x74\xa0\x9a\x6b\xce\x96\x49\x19\xc8\xe5\x9a\x26\xb6\x27\x5f\xa9\x48\xc9\x08\xee\xa0\xe3\x9b\x22\xbb\x5a\x97\x4a\x4e\x06\x03\x66\xfe\x70\x67\xa2\x5b\x07\xa2\xb9\x96\x67\x01\xba\x58\xa0\x96\xd3\xe4\x4e\xb6\x7e\xcb\xbc\xe0\xca\xf5\xb3\xbf\xae\x15\x66\xc6\x7c\x4a\x5a\x6c\xa8\xd8\xe1\xf8\x06\xc2\xe8\xa2\x57\xa1\xbd\x28\x1c\x85\xe2\x71\x82\xc2\x34\x0d\xaa\x13\x68\x23\xa7\x7a\xae\x5f\x40\x30\x53\x85\x65\x16\xbd\x38\x90\xcb\x4e\x73\x03\x2b\xbb\x51\x40\x2c\x4b\x7f\x37\xc9\x9f\x82\x3a\x96\xe7\x12\x24\x79\xf3\x70\xd0\x81\x22\x76\x03\xb9\x9a\x35\x87\x21\xa8\x61\x02\xc6\xb4\xd5\xb3\xaf\x1a\xe9\xed\x1d\x67\xc6\x4e\xd2\xdc\x0e\x24\x31\xd5\x79\x0b\x1c\x9c\xe2\xc0\x50\xef\xb5\x86\x40\x1d\x43\xac\x26\x64\x96\x1e\x04\xb1\xd3\xeb\xdb\xa5\x6e\x0d\x0f\x62\xd8\x95\x62\x1b\x0b\xf3\x85\x63\x80\xae\x4c\xe8\xca\x3e\xdd\x7d\x82\x14\xe6\x9e\xe0\x8c\xee\xf9\x68\x3f\xa8\x4c\x7f\xf1\x3a\xdd\xb4\x82\x46\x76\x7c\x59\x3c\xef\xdd\x56\x79\xd0\xc9\x3c\x33\x50\xae\x26\x96\xf4\xa0\x93\xe9\xbb\x5d\xf6\x36\xc1\x0f\x5a\xed\x49\xf7\xad\x1f\x28\x0f\x2b\x3c\x22\xcc\x00\x4a\xc3\x04\x65\x07\x52\x06\xdb\x83\x3a\xfe\xf2\x83\x17\xa9\xe0\xb8\x42\xca\x88\xea\xfa\xf0\x83\x2a\xad\xea\xa5\x2a\x86\xf8\x9f\xe3\xa8\x80\x80\xd2\x5e\x60\x83\x24\xe6\xee\x38\x33\x6e\x96\x0c\x34\x28\x7f\x8f\xd7\xe4\x09\x68\xe4\xab\x9b\xf0\x8e\x1e\x0c\xcc\x49\x91\x6b\x8d\x21\xd7\x48\xaf\x69\xfa\x83\x6b\xa5\x8d\x29\x1e\xb1\xf6\xe3\x4e\xfa\x7d\x17\xde\x9a\x4d\xe4\xc1\x26\xe9\x9b\xcf\x99\xfc\xf3\x4e\x58\x0b\x2b\xde\x95\x56\xa9\x7b\xa7\x9c\xd1\x5d\x98\x5e\xeb\x83\x62\xa6\x07\x44\x73\xa4\xd3\x2c\x37\xe8\x65\x47\xb7\xa8\xc7\x89\xf8\xbc\x34\x46\xd0\xcd\x8e\xa2\x34\x93\x87\xf3\xa0\x98\xa5\x78\x86\x19\xae\x65\xa6\xca\x3c\x28\x67\xc7\xb1\xf8\xbc\x08\xfb\xb0\x4e\x86\x01\xd2\x59\x3e\xce\x9d\x96\x07\xe1\x4c\x03\x1d\xc1\xb1\x92\x76\x0f\x3e\x71\xa8\x38\x08\xc9\x82\x70\x8f\x4f\x1c\x28\x18\x8a\x37\x05\x68\xdf\x34\x4e\x7c\xe7\x50\x49\x16\x6e\x19\x36\x05\x7a\x99\x99\x49\x67\x7a\x7c\xf4\xa0\x97\x68\x49\x7d\x41\xd5\x7b\x93\x0a\xf0\xf8\x0c\x82\x2f\xe2\x20\x66\x9f\xf5\xde\x36\xe0\x8b\x88\x8a\xf3\x6f\xf1\x16\x82\x2c\x85\x1a\xf9\xf4\x96\x24\x9a\x7d\x48\x81\x8f\x22\x2a\x9b\x1f\x30\x49\x2f\x8f\xaf\x22\x2a\x4d\x7a\x99\x28\xd9\xe3\xbb\x08\x0e\x03\x77\xa7\xf7\xba\xbe\x12\xd2\xe4\xfe\xc2\xd2\x86\x8f\x23\x6a\x02\xcd\x24\xf0\x55\x04\x9d\x1b\x78\x63\x9a\x5e\x1c\x78\x7c\x11\x51\xd3\xe2\x60\x6e\xc5\xda\x1e\x3e\x88\xa0\xe6\xa0\x18\x96\x3c\x8d\xa3\x16\xec\x1e\x9f\x7d\x1c\x14\x68\x04\x78\x4d\x27\xa9\x39\x70\x3d\xbe\x88\x90\xd3\x0d\x8c\xd6\x4e\x1d\xb4\x74\xf6\x25\xec\x9f\x02\x35\xc0\x16\x14\xbf\xa9\xd9\x65\x03\xa3\x8b\x67\x01\x41\x59\x53\x1f\xd7\x78\x43\xa2\xec\xd4\xca\xce\x3b\x00\xc2\x47\x7c\x48\x61\x87\x57\x0b\x51\xb2\x6a\xb8\x1f\x77\x26\x39\xe2\x6b\x25\x0c\x97\x0e\xb3\xaa\x09\x14\xc2\x48\x9a\xc4\xcf\x66\x54\x75\x5a\x9a\xf7\x7c\x85\x99\xaf\x6c\xdd\x64\xdc\x98\x57\x1a\xbe\x16\xda\xc2\xc1\x7a\xe3\x5a\x09\xdb\xa3\x1d\x4c\x61\x4c\x0a\x2a\x47\x0b\x4c\xb8\xe8\x02\x35\xca\x0f\x98\xde\xf4\xe1\x2e\x3f\x46\x1a\x65\x69\x0d\x22\xa3\x38\x39\xf4\x7d\xa3\x2c\xad\x29\xe5\xa5\x40\x32\x26\x98\x7e\x41\xfe\x5f\xd1\xaa\x47\x6e\x71\x7c\x83\xbe\x2b\x63\x01\xe4\xb5\x6b\x4c\x20\xfa\xba\xf7\x0c\xa9\x61\xfc\x0b\x59\x39\x0f\xba\xda\x35\x5f\xca\xf9\x79\xd0\xd5\x04\xf1\xbd\x8c\x51\x8d\x1e\xd4\x35\x7f\x87\xf1\x8e\xd9\x03\x20\xa8\x1d\x87\xfd\xa3\x38\x07\xcd\x86\x86\xa1\x7b\x19\x64\x35\x57\xc0\x04\x95\xce\x17\x04\xb5\x6b\x34\xc2\x3b\x99\x09\xe8\x6a\xc2\xf1\x96\xb1\xf7\xa6\xaa\x32\xdd\x66\x19\x53\x3f\x14\x86\xf8\xbd\xd1\x3a\x03\x81\x9e\x61\x4a\x28\xab\x69\x82\xa4\x26\xe0\x35\x98\x83\x16\xb7\x52\xbc\xcc\xd2\x24\x1e\x84\x74\x06\xd8\xcd\x0f\x8a\x9a\xc1\xfe\x12\x80\xa4\x76\x72\x33\x4e\x2f\xce\xcc\x63\x30\x27\xe0\x0a\xd3\xb5\xd9\xbe\x05\x2d\x8d\x20\x3d\x24\xb3\xee\x1c\x04\x35\x7d\x47\x19\x49\x3b\x94\x5a\x27\x8c\x8a\x10\x5c\xbc\x3d\x5e\x5b\x21\x84\x2f\xc3\xc6\xbd\x5d\xd7\x0a\x2f\x34\x5a\x2d\x6e\x53\xb1\x91\x15\x6d\x62\x05\xb8\x4f\xdd\x74\x03\x5b\x3f\xeb\xa1\x13\x46\x48\xc5\xec\x31\x79\xa1\x56\xd0\x09\x25\x71\x1c\xde\xe2\xbd\xfb\xe6\xc4\x52\x3a\x61\x26\x7b\xca\x84\xcf\x5d\x0d\x7f\xa8\xa9\x5b\x09\xfc\x17\xe9\x9c\x45\x4d\xcd\x91\xdd\x81\xde\x7f\x9b\x67\x78\x8d\x80\xf7\x18\xcf\xab\x9b\x40\x21\xdd\x5e\xa4\x47\x3a\x0a\xb4\x02\x6c\x30\x25\x95\x79\x0f\xd4\xd0\x2d\xdb\x9f\x59\x87\x0a\x35\x74\xab\x69\x37\x23\x42\x2b\x54\xd1\xad\x50\x60\x2f\x81\x2a\xd4\xd1\x7c\x93\xcc\xef\x94\x15\x02\x52\x3a\xeb\xab\x3f\xd2\xeb\x4a\xad\x50\x71\x85\x78\x63\x6e\xbd\x2b\xd4\xd0\x1d\xbf\x3c\xd3\xe9\x56\xa8\x9e\x6d\x73\x05\x9d\x88\x66\x06\x43\xad\x81\x49\xa2\x5b\x05\x5a\x01\x7e\x26\xd9\x53\xa1\xa2\xee\x44\x1d\x2d\x29\xe1\x22\x20\x6a\xea\x8e\x83\x08\xe8\x30\x53\x6b\x15\xaa\xea\x4e\x15\x8a\x51\xc0\x15\xea\x69\xbe\x37\xa6\xd7\x00\x33\x38\x09\x14\xee\x33\x84\x77\x87\x26\x33\x59\x95\x42\x11\x6c\x56\xca\x3a\xef\x40\x8a\x29\x5e\x9f\xb4\xb0\xc6\xac\xbf\x3e\xa8\x2c\x85\x36\x79\x7a\x98\x65\x58\x2a\x50\xca\xfd\x57\xe1\x02\x75\x02\xe1\x75\x80\x09\x24\x2a\xd0\xca\x08\xa1\x56\x9b\x63\x22\xc9\x26\xc0\x2a\xd0\xcc\x5e\x2f\xa4\xf3\x67\x17\x15\xa8\x65\xcf\xc1\xe7\x92\xbc\x75\x41\xc9\xfc\x34\x31\xd0\xa3\xd4\x03\xbe\x69\xd2\xe2\x4a\x8a\xe1\x00\xde\xf4\x97\x11\x4e\x2f\x3f\x10\xb7\xb7\x30\x03\x6e\x2e\x0a\xfb\xc8\x5d\x8a\x87\x5c\x8c\x7b\x4b\x8d\x1a\x0c\xda\x97\x5f\xce\xed\x55\x40\xa6\x80\x4b\x94\x9c\x66\x13\x41\xe7\x5e\xdf\xa4\x2f\x53\x4f\x50\xe8\x4f\x2e\x9f\x2b\x90\xca\x3e\x05\x92\xf1\x46\x01\x9f\x1a\x9a\x66\xb9\xd0\x0a\x14\xb1\x0c\xe0\x10\x6f\xc3\x4f\xe6\xf5\x6c\x2d\x5f\xa1\x8d\xa6\x19\x79\x99\x7f\x58\x87\xf7\x27\xe9\x9c\xca\x2b\x0f\x74\x15\x61\xef\xbf\x2a\xaf\x6c\x98\x0b\xa5\xa2\xf7\x6c\x57\x49\x01\xfb\xda\x14\x64\x83\xa0\x8f\xa5\x46\x25\xcc\xa0\x68\xde\x1e\x27\xe7\x5f\x3d\x3a\xcb\xfe\xa4\xf4\xeb\xe7\x7f\x79\x26\x7f\x53\xd2\xff\x28\x41\xe1\xff\xeb\x5f\x4a\x3f\x3e\xff\xe1\x87\xcb\xa7\xc5\xbf\x7f\xff\xe4\x3f\xcf\x7e\xfd\xf8\xeb\xc7\xdf\x3e\x2e\xfe\xf9\xf7\xbf\xfb\x17\xfe\xeb\xc2\xa3\xac\x4c\xff\x83\x94\x17\xeb\x9f\x9a\x1e\x9d\x9d\xfd\x5f\x00\x00\x00\xff\xff\xae\xb5\x1e\xd8\x3f\x35\x00\x00"

func db20180325065525_seedSqlBytes() ([]byte, error) {
	return bindataRead(
		_db20180325065525_seedSql,
		"db/20180325065525_seed.sql",
	)
}

func db20180325065525_seedSql() (*asset, error) {
	bytes, err := db20180325065525_seedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "db/20180325065525_seed.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"db/20180325065223_locations.sql": db20180325065223_locationsSql,
	"db/20180325065525_seed.sql":      db20180325065525_seedSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"db": &bintree{nil, map[string]*bintree{
		"20180325065223_locations.sql": &bintree{db20180325065223_locationsSql, map[string]*bintree{}},
		"20180325065525_seed.sql":      &bintree{db20180325065525_seedSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
